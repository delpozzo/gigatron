_startAddress_                EQU                               0x0200

; Internal Variables
serialRawPrev                 EQU                               0x0081
register0                     EQU                               0x0082
register1                     EQU                               register0 + 0x02
register2                     EQU                               register0 + 0x04
register3                     EQU                               register0 + 0x06
register4                     EQU                               register0 + 0x08
register5                     EQU                               register0 + 0x0A
register6                     EQU                               register0 + 0x0C
register7                     EQU                               register0 + 0x0E
register8                     EQU                               register0 + 0x10
register9                     EQU                               register0 + 0x12
register10                    EQU                               register0 + 0x14
register11                    EQU                               register0 + 0x16
register12                    EQU                               register0 + 0x18
register13                    EQU                               register0 + 0x1A
register14                    EQU                               register0 + 0x1C
register15                    EQU                               register0 + 0x1E
fgbgColour                    EQU                               register0 + 0x20
cursorXY                      EQU                               register0 + 0x22
midiStream                    EQU                               register0 + 0x24
midiDelay                     EQU                               register0 + 0x26
miscFlags                     EQU                               register0 + 0x28
timerTick                     EQU                               register0 + 0x2A
timerPrev                     EQU                               register0 + 0x2C

; Internal Constants
ENABLE_SCROLL_BIT             EQU                               0x0001
ON_BOTTOM_ROW_BIT             EQU                               0x0002
ENABLE_SCROLL_MSK             EQU                               0xfffe
ON_BOTTOM_ROW_MSK             EQU                               0xfffd

; Internal Buffers
textWorkArea                  EQU                               0x7fa0

; Includes
%includePath                  "../../at67/gbas/runtime"
%include                      util.i
%include                      gigatron.i
%include                      macros.i

; Labels
_entryPoint_                  EQU                               0x0200
_loop                         EQU                               0x02bb
_handleInput                  EQU                               0x02c2
_initCards                    EQU                               0x03e0
_clearHand                    EQU                               0x0464
_dealCards                    EQU                               0x04ca
_retry1                       EQU                               0x04cf
_cheatDeal                    EQU                               0x0533
_drawCards                    EQU                               0x0593
_retry2                       EQU                               0x05b4
_selectCard                   EQU                               0x09b2
_holdCard                     EQU                               0x0cdd
_displayPayouts               EQU                               0x0fd5
_displayCards                 EQU                               0x14e3
_sortCards                    EQU                               0x31b5
_checkHand                    EQU                               0x33a2
_jacksOrBetter                EQU                               0x38c2
_twoPair                      EQU                               0x39ce
_threeOfAKind                 EQU                               0x3db2
_straight                     EQU                               0x3ed8
_flush                        EQU                               0x42e2
_fullHouse                    EQU                               0x45a6
_fourOfAKind                  EQU                               0x48d2
_straightFlush                EQU                               0x4ca8
_royalFlush                   EQU                               0x4cc7
_page_0x0300                  EQU                               0x0300
_endif_0x02fb                 EQU                               0x0304
_endif_0x0309                 EQU                               0x0312
_endif_0x0346                 EQU                               0x0341
_endif_0x0354                 EQU                               0x034f
_else_0x039b                  EQU                               0x038e
_endif_0x03bc                 EQU                               0x03af
_endif_0x03c5                 EQU                               0x03b8
_endif_0x03f3                 EQU                               0x03de
_next_0x03fe                  EQU                               0x03e9
_page_0x0400                  EQU                               0x0400
_endif_0x0481                 EQU                               0x0454
_next_0x0496                  EQU                               0x0469
_page_0x0500                  EQU                               0x0500
_else_0x055e                  EQU                               0x051a
_endif_0x0563                 EQU                               0x051f
_next_0x0604                  EQU                               0x0598
_page_0x08a0                  EQU                               0x08a0
_else_0x06a1                  EQU                               0x08e9
_page_0x09a0                  EQU                               0x09a0
_endif_0x06a6                 EQU                               0x09a2
_page_0x0aa0                  EQU                               0x0aa0
_elseif_0x0752                EQU                               0x0af4
_page_0x0ba0                  EQU                               0x0ba0
_elseif_0x077c                EQU                               0x0bc4
_elseif_0x07a6                EQU                               0x0bea
_page_0x0ca0                  EQU                               0x0ca0
_elseif_0x07d0                EQU                               0x0cba
_endif_0x07f5                 EQU                               0x0cdb
_page_0x0da0                  EQU                               0x0da0
_elseif_0x0819                EQU                               0x0da7
_elseif_0x0832                EQU                               0x0dbc
_elseif_0x084b                EQU                               0x0dd1
_elseif_0x0864                EQU                               0x0de6
_page_0x0ea0                  EQU                               0x0ea0
_endif_0x0878                 EQU                               0x0ea2
_elseif_0x08dc                EQU                               0x0eec
_page_0x0fa0                  EQU                               0x0fa0
_endif_0x092b                 EQU                               0x0fd3
_endif_0x094a                 EQU                               0x0fee
_page_0x10a0                  EQU                               0x10a0
_endif_0x097e                 EQU                               0x10ca
_page_0x11a0                  EQU                               0x11a0
_endif_0x09b2                 EQU                               0x11a4
_endif_0x09e6                 EQU                               0x11d4
_page_0x12a0                  EQU                               0x12a0
_endif_0x0a1a                 EQU                               0x12ae
_endif_0x0a4e                 EQU                               0x12de
_page_0x13a0                  EQU                               0x13a0
_endif_0x0a82                 EQU                               0x13bb
_endif_0x0ab6                 EQU                               0x13eb
_page_0x14a0                  EQU                               0x14a0
_endif_0x0aea                 EQU                               0x14c5
_page_0x15a0                  EQU                               0x15a0
_page_0x16a0                  EQU                               0x16a0
_else_0x0bc9                  EQU                               0x16d6
_endif_0x0bcd                 EQU                               0x16da
_page_0x17a0                  EQU                               0x17a0
_elseif_0x0c16                EQU                               0x17c1
_page_0x18a0                  EQU                               0x18a0
_elseif_0x0c5f                EQU                               0x18ac
_elseif_0x0ca8                EQU                               0x18e9
_page_0x19a0                  EQU                               0x19a0
_else_0x0cf1                  EQU                               0x19d0
_page_0x1aa0                  EQU                               0x1aa0
_endif_0x0d24                 EQU                               0x1aa7
_endif_0x0d4f                 EQU                               0x1aca
_page_0x1ba0                  EQU                               0x1ba0
_page_0x1ca0                  EQU                               0x1ca0
_else_0x0e0b                  EQU                               0x1cb7
_endif_0x0e0f                 EQU                               0x1cbb
_page_0x1da0                  EQU                               0x1da0
_elseif_0x0e58                EQU                               0x1da2
_elseif_0x0ea1                EQU                               0x1ddf
_page_0x1ea0                  EQU                               0x1ea0
_elseif_0x0eea                EQU                               0x1ecb
_page_0x1fa0                  EQU                               0x1fa0
_else_0x0f33                  EQU                               0x1fb6
_endif_0x0f66                 EQU                               0x1fe1
_page_0x20a0                  EQU                               0x20a0
_endif_0x0f91                 EQU                               0x20af
_page_0x21a0                  EQU                               0x21a0
_else_0x104d                  EQU                               0x21f2
_page_0x22a0                  EQU                               0x22a0
_endif_0x1051                 EQU                               0x22a2
_elseif_0x109a                EQU                               0x22df
_page_0x23a0                  EQU                               0x23a0
_elseif_0x10e3                EQU                               0x23cb
_page_0x24a0                  EQU                               0x24a0
_elseif_0x112c                EQU                               0x24b6
_else_0x1175                  EQU                               0x24f3
_page_0x25a0                  EQU                               0x25a0
_endif_0x11a8                 EQU                               0x25c9
_endif_0x11d3                 EQU                               0x25ec
_page_0x26a0                  EQU                               0x26a0
_page_0x27a0                  EQU                               0x27a0
_else_0x128f                  EQU                               0x27db
_endif_0x1293                 EQU                               0x27df
_page_0x28a0                  EQU                               0x28a0
_elseif_0x12dc                EQU                               0x28cb
_page_0x29a0                  EQU                               0x29a0
_elseif_0x1325                EQU                               0x29b6
_elseif_0x136e                EQU                               0x29f3
_page_0x2aa0                  EQU                               0x2aa0
_else_0x13b7                  EQU                               0x2adb
_page_0x2ba0                  EQU                               0x2ba0
_endif_0x13ea                 EQU                               0x2bb1
_endif_0x1415                 EQU                               0x2bd4
_page_0x2ca0                  EQU                               0x2ca0
_page_0x2da0                  EQU                               0x2da0
_else_0x14d1                  EQU                               0x2dc1
_endif_0x14d5                 EQU                               0x2dc5
_page_0x2ea0                  EQU                               0x2ea0
_elseif_0x151e                EQU                               0x2eac
_elseif_0x1567                EQU                               0x2ee9
_page_0x2fa0                  EQU                               0x2fa0
_elseif_0x15b0                EQU                               0x2fd0
_page_0x30a0                  EQU                               0x30a0
_else_0x15f9                  EQU                               0x30bb
_endif_0x162c                 EQU                               0x30e6
_page_0x31a0                  EQU                               0x31a0
_endif_0x1657                 EQU                               0x31b3
_next_0x165e                  EQU                               0x31ba
_next_0x1670                  EQU                               0x31c8
_page_0x32a0                  EQU                               0x32a0
_endif_0x1702                 EQU                               0x32d8
_page_0x33a0                  EQU                               0x33a0
_endif_0x1779                 EQU                               0x33f5
_page_0x34a0                  EQU                               0x34a0
_endif_0x17ac                 EQU                               0x34ce
_page_0x35a0                  EQU                               0x35a0
_endif_0x17df                 EQU                               0x35a9
_endif_0x1812                 EQU                               0x35d8
_page_0x36a0                  EQU                               0x36a0
_endif_0x1840                 EQU                               0x36b3
_endif_0x186e                 EQU                               0x36dd
_page_0x37a0                  EQU                               0x37a0
_endif_0x18a1                 EQU                               0x37b8
_endif_0x18d4                 EQU                               0x37e7
_page_0x38a0                  EQU                               0x38a0
_endif_0x1907                 EQU                               0x38c0
_next_0x190e                  EQU                               0x38c7
_page_0x39a0                  EQU                               0x39a0
_endif_0x1982                 EQU                               0x39be
_page_0x3aa0                  EQU                               0x3aa0
_elseif_0x1a1c                EQU                               0x3ae3
_page_0x3ba0                  EQU                               0x3ba0
_page_0x3ca0                  EQU                               0x3ca0
_elseif_0x1aa5                EQU                               0x3ca2
_page_0x3da0                  EQU                               0x3da0
_endif_0x1b29                 EQU                               0x3db0
_next_0x1b30                  EQU                               0x3db7
_page_0x3ea0                  EQU                               0x3ea0
_endif_0x1bc8                 EQU                               0x3ec8
_page_0x3fa0                  EQU                               0x3fa0
_page_0x40a0                  EQU                               0x40a0
_page_0x41a0                  EQU                               0x41a0
_elseif_0x1d08                EQU                               0x41ab
_page_0x42a0                  EQU                               0x42a0
_endif_0x1dce                 EQU                               0x42e0
_page_0x43a0                  EQU                               0x43a0
_page_0x44a0                  EQU                               0x44a0
_page_0x45a0                  EQU                               0x45a0
_endif_0x1ed1                 EQU                               0x45a4
_page_0x46a0                  EQU                               0x46a0
_elseif_0x1f9b                EQU                               0x46e8
_page_0x47a0                  EQU                               0x47a0
_page_0x48a0                  EQU                               0x48a0
_endif_0x205d                 EQU                               0x48d0
_page_0x49a0                  EQU                               0x49a0
_page_0x4aa0                  EQU                               0x4aa0
_elseif_0x2127                EQU                               0x4abe
_page_0x4ba0                  EQU                               0x4ba0
_page_0x4ca0                  EQU                               0x4ca0
_endif_0x21e9                 EQU                               0x4ca6
_endif_0x2210                 EQU                               0x4cc5
_page_0x4da0                  EQU                               0x4da0
_page_0x4ea0                  EQU                               0x4ea0
_endif_0x22e7                 EQU                               0x4eb2
_end_0x22e9                   EQU                               0x4eb4

; Global Variables
_balance                      EQU                               0x0030
_currentRound                 EQU                               0x0032
_selectedCard                 EQU                               0x0034
_pickedCard                   EQU                               0x0036
_tempCard                     EQU                               0x0038
_tempValue1                   EQU                               0x003a
_tempValue2                   EQU                               0x003c
_tempValue3                   EQU                               0x003e
_straightFlag                 EQU                               0x0040
_flushFlag                    EQU                               0x0042
_winType                      EQU                               0x0044
_holdX                        EQU                               0x0046
_inputDevice                  EQU                               0x0048
_suit                         EQU                               0x004a
_i                            EQU                               0x004c
_j                            EQU                               0x004e

; Local Variables

; Arrays
_cardValue_array              EQU                               0x0696
_cardValue_array              DW                                0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 
_cardSuit_array               EQU                               0x062c
_cardSuit_array               DW                                0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 
_cardState_array              EQU                               0x05c2
_cardState_array              DW                                0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 
_hand_array                   EQU                               0x72f4
_hand_array                   DW                                0x0000 0x0000 0x0000 0x0000 0x0000 0x0000 

; Strings

; Constant Strings
_str_0x72d9                   EQU                               0x72d9
_str_0x72d9                   DB                                25 '                         ' 0
_str_0x72d3                   EQU                               0x72d3
_str_0x72d3                   DB                                4 'HELD' 0
_str_0x72cd                   EQU                               0x72cd
_str_0x72cd                   DB                                4 '    ' 0
_str_0x72bb                   EQU                               0x72bb
_str_0x72bb                   DB                                16 'Royal Flush x250' 0
_str_0x72ad                   EQU                               0x72ad
_str_0x72ad                   DB                                12 'S.Flush  x50' 0
_str_0x71f2                   EQU                               0x71f2
_str_0x71f2                   DB                                12 '4-Kind   x25' 0
_str_0x72a0                   EQU                               0x72a0
_str_0x72a0                   DB                                11 'F.House  x9' 0
_str_0x71e5                   EQU                               0x71e5
_str_0x71e5                   DB                                11 'Flush    x6' 0
_str_0x71d8                   EQU                               0x71d8
_str_0x71d8                   DB                                11 'Straight x4' 0
_str_0x71cb                   EQU                               0x71cb
_str_0x71cb                   DB                                11 '3-Kind   x3' 0
_str_0x71be                   EQU                               0x71be
_str_0x71be                   DB                                11 'Two Pair x2' 0
_str_0x71b1                   EQU                               0x71b1
_str_0x71b1                   DB                                11 'Jacks+   x1' 0
_str_0x7ea2                   EQU                               0x7ea2
_str_0x7ea2                   DB                                1 'A' 0
_str_0x7da2                   EQU                               0x7da2
_str_0x7da2                   DB                                1 'K' 0
_str_0x7ca2                   EQU                               0x7ca2
_str_0x7ca2                   DB                                1 'Q' 0
_str_0x7ba2                   EQU                               0x7ba2
_str_0x7ba2                   DB                                1 'J' 0
_str_0x71a3                   EQU                               0x71a3
_str_0x71a3                   DB                                12 'Royal Flush!' 0
_str_0x70ef                   EQU                               0x70ef
_str_0x70ef                   DB                                15 'Straight Flush!' 0
_str_0x70de                   EQU                               0x70de
_str_0x70de                   DB                                15 'Four of a Kind!' 0
_str_0x70d1                   EQU                               0x70d1
_str_0x70d1                   DB                                11 'Full House!' 0
_str_0x70c9                   EQU                               0x70c9
_str_0x70c9                   DB                                6 'Flush!' 0
_str_0x70be                   EQU                               0x70be
_str_0x70be                   DB                                9 'Straight!' 0
_str_0x70ac                   EQU                               0x70ac
_str_0x70ac                   DB                                16 'Three of a Kind!' 0
_str_0x70a1                   EQU                               0x70a1
_str_0x70a1                   DB                                9 'Two Pair!' 0
_str_0x6fee                   EQU                               0x6fee
_str_0x6fee                   DB                                16 'Jacks or Better!' 0

; Data

; Time

; Define Bytes

; Define Words

; Define Images

; Define Sprites
def_sprites_0x7ea5            EQU                               0x7ea5
def_sprites_0x7ea5            DB                                63 63 63 63 63 0 63 63 63 63 0 0 63 63 63 63 0 0 63 63 63 63 0 0 63 0 0 0 63 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 63 0 63 0 0 0 63 0 63 63 63 63 63 0 63 63 63 63 0 0 63 63 0 0 0 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x7da5            EQU                               0x7da5
def_sprites_0x7da5            DB                                0 63 63 63 63 63 0 0 63 63 63 63 0 0 63 63 63 63 0 0 63 63 63 63 0 63 0 0 0 63 0 0 0 0 0 0 0 0 0 0 0 0 0 63 0 0 0 0 0 63 0 0 0 63 0 63 63 63 63 63 0 0 63 63 63 63 0 0 0 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x7ca5            EQU                               0x7ca5
def_sprites_0x7ca5            DB                                63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x7ba5            EQU                               0x7ba5
def_sprites_0x7ba5            DB                                63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 0 3 63 63 63 0 3 63 63 63 0 3 63 3 63 0 3 3 3 3 0 3 3 3 3 3 63 0 3 3 3 3 63 63 0 3 3 3 63 63 63 0 3 3 63 63 63 63 0 3 63 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x7aa5            EQU                               0x7aa5
def_sprites_0x7aa5            DB                                0 63 63 63 63 63 3 0 63 63 63 63 3 3 0 63 63 63 3 3 3 0 63 63 3 3 3 3 0 63 3 3 3 3 3 0 3 3 3 3 3 3 3 3 3 3 3 0 3 3 3 3 0 63 3 3 3 0 63 63 3 3 0 63 63 63 3 0 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x79a5            EQU                               0x79a5
def_sprites_0x79a5            DB                                63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x78a5            EQU                               0x78a5
def_sprites_0x78a5            DB                                63 63 0 0 0 63 63 0 3 3 3 0 0 3 63 63 3 3 0 3 63 3 3 3 0 3 3 3 3 3 0 3 3 3 3 3 63 0 3 3 3 3 63 63 0 3 3 3 63 63 63 0 3 3 63 63 63 63 0 3 63 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x77a5            EQU                               0x77a5
def_sprites_0x77a5            DB                                63 63 0 0 0 63 63 0 3 3 3 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 3 3 3 3 0 63 3 3 3 0 63 63 3 3 0 63 63 63 3 0 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x76a5            EQU                               0x76a5
def_sprites_0x76a5            DB                                63 63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 63 0 63 63 63 63 63 0 63 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x75a5            EQU                               0x75a5
def_sprites_0x75a5            DB                                63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 0 0 63 63 63 0 0 0 63 63 0 0 0 0 63 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 63 63 0 0 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 0 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x74a5            EQU                               0x74a5
def_sprites_0x74a5            DB                                0 63 63 63 63 63 0 0 63 63 63 63 0 0 0 63 63 63 0 0 0 0 63 63 0 0 0 0 0 63 0 0 0 0 0 0 0 0 0 0 0 0 0 63 63 0 0 0 0 63 63 63 0 0 0 63 63 63 63 63 0 0 63 63 63 63 0 0 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 
def_sprites_0x73a5            EQU                               0x73a5
def_sprites_0x73a5            DB                                63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 0 63 63 63 63 63 0 63 63 63 63 63 0 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 63 241 

; Define Fonts

; Lookup Tables
_spriteLut_0x6fe0             EQU                               0x6fe0
_spriteLut_0x6fe0             DW                                0x7ea5 0x0000 0x7da5 0x0006 0x7ca5 0x000c 0x0000
_spriteLut_0x6fd2             EQU                               0x6fd2
_spriteLut_0x6fd2             DW                                0x7ba5 0x0000 0x7aa5 0x0006 0x79a5 0x000c 0x0000
_spriteLut_0x6fc4             EQU                               0x6fc4
_spriteLut_0x6fc4             DW                                0x78a5 0x0000 0x77a5 0x0006 0x76a5 0x000c 0x0000
_spriteLut_0x6fb6             EQU                               0x6fb6
_spriteLut_0x6fb6             DW                                0x75a5 0x0000 0x74a5 0x0006 0x73a5 0x000c 0x0000
_spritesLut_                  EQU                               0x6fae
_spritesLut_                  DW                                0x6fe0 0x6fd2 0x6fc4 0x6fb6 

; Code
_entryPoint_                  LDI                               0x28
                              STW                               romType
                              RomCheck                          
                              Initialise                        
                              InitEqOp                        
                              InitGtOp                        
                              InitRealTimeStub                                                  ; INIT

                              ClearVertBlinds                   
                              LDI                               2
                              STW                               graphicsMode
                              ScanlineMode                                                      ; cls : mode 2

                              LDI                               100
                              STW                               _balance                        ; balance = 100

                              LDI                               1
                              STW                               _currentRound                   ; currentRound = DEAL

                              LDI                               0
                              STW                               _selectedCard                   ; selectedCard = 0

                              LDI                               0
                              STW                               _pickedCard                     ; pickedCard = 0

                              LDI                               0
                              STW                               _tempCard                       ; tempCard = 0

                              LDI                               0
                              STW                               _tempValue1                     ; tempValue1 = 0

                              LDI                               0
                              STW                               _tempValue2                     ; tempValue2 = 0

                              LDI                               0
                              STW                               _tempValue3                     ; tempValue3 = 0

                              LDI                               0
                              STW                               _straightFlag                   ; straightFlag = 0

                              LDI                               0
                              STW                               _flushFlag                      ; flushFlag = 0

                              LDI                               0
                              STW                               _winType                        ; winType = NONE

                              LDI                               0
                              STW                               _holdX                          ; holdX = 0

                              LDI                               255
                              STW                               _inputDevice                    ; inputDevice = 255

                              LDWI                              _initCards
                              CALL                              giga_vAC                        ; gosub initCards

                              LDI                               16
                              ST                                fgbgColour                      ; set BG_COLOUR, 16

                              LDI                               16
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 16

                              LDI                               3
                              STW                               drawRectF_x1
                              LDI                               0
                              STW                               drawRectF_y1
                              LDI                               156
                              STW                               drawRectF_x2
                              LDI                               47
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 3, 0, 156, 47

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               3
                              STW                               drawRect_x1
                              LDI                               0
                              STW                               drawRect_y1
                              LDI                               156
                              STW                               drawRect_x2
                              LDI                               47
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 3, 0, 156, 47

                              LDWI                              _displayPayouts
                              CALL                              giga_vAC                        ; gosub displayPayouts

                              LDWI                              _dealCards
                              CALL                              giga_vAC                        ; gosub dealCards

                              LDWI                              _displayCards
                              CALL                              giga_vAC                        ; gosub displayCards

                              LDWI                              _selectCard
                              CALL                              giga_vAC                        ; gosub selectCard

_loop                         LDWI                              _handleInput
                              CALL                              giga_vAC                        ; gosub handleInput

                              BRA                               _loop                           ; goto &loop

_handleInput                  PUSH                              
                              LD                                giga_buttonState
                              STW                               _inputDevice                    ; inputDevice = get("BUTTON_STATE")

                              LDW                               _inputDevice
                              XORI                              254
                              CALL                              convertEqOpAddr
                              STW                               0xe8
                              LDW                               _currentRound
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              JumpFalse                         _endif_0x0309 1                 ; if (inputDevice = 254) AND (currentRound = DEAL)

                              LDW                               _selectedCard
                              ADDI                              1
                              STW                               _selectedCard                   ; selectedCard = selectedCard + 1

                              LDW                               _selectedCard
                              XORI                              5
                              JumpEQ                            _endif_0x02fb 0                 ; if selectedCard &= 5

                              LDI                               0
                              STW                               0xc0
                              LDWI                              _page_0x0300
                              CALL                              giga_vAC
_page_0x0300                  LDW                               0xc0
                              STW                               _selectedCard                   ; selectedCard = 0

_endif_0x02fb                 LDWI                              _selectCard
                              CALL                              giga_vAC                        ; gosub selectCard

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; wait 10

_endif_0x0309                 LDW                               _inputDevice
                              XORI                              253
                              CALL                              convertEqOpAddr
                              STW                               0xe8
                              LDW                               _currentRound
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              JumpFalse                         _endif_0x0354 3                 ; if (inputDevice = 253) AND (currentRound = DEAL)

                              LDW                               _selectedCard
                              SUBI                              1
                              STW                               _selectedCard                   ; selectedCard = selectedCard - 1

                              LDWI                              -1
                              XORW                              _selectedCard
                              JumpEQ                            _endif_0x0346 2                 ; if selectedCard &= -1

                              LDI                               4
                              STW                               _selectedCard                   ; selectedCard = 4

_endif_0x0346                 LDWI                              _selectCard
                              CALL                              giga_vAC                        ; gosub selectCard

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; wait 10

_endif_0x0354                 LDW                               _inputDevice
                              XORI                              191
                              JumpEQ                            _endif_0x03c5 6                 ; if inputDevice &= 191

                              LDW                               _currentRound
                              XORI                              1
                              JumpEQ                            _else_0x039b 4                  ; if currentRound &= DEAL

                              LDI                               2
                              STW                               _currentRound                   ; currentRound = DRAW

                              LDWI                              -1
                              STW                               _selectedCard                   ; selectedCard = -1

                              LDWI                              _selectCard
                              CALL                              giga_vAC                        ; gosub selectCard

                              LDWI                              _drawCards
                              CALL                              giga_vAC                        ; gosub drawCards

                              LDWI                              _displayCards
                              CALL                              giga_vAC                        ; gosub displayCards

                              LDWI                              _checkHand
                              CALL                              giga_vAC                        ; gosub checkHand

                              LDWI                              _displayPayouts
                              CALL                              giga_vAC
                              LDWI                              _endif_0x03bc
                              CALL                              giga_vAC                        ; gosub displayPayouts

_else_0x039b                  LDI                               1
                              STW                               _currentRound                   ; currentRound = DEAL

                              LDI                               0
                              STW                               _winType                        ; winType = NONE

                              LDWI                              _clearHand
                              CALL                              giga_vAC                        ; gosub clearHand

                              LDWI                              _displayPayouts
                              CALL                              giga_vAC                        ; gosub displayPayouts

                              LDWI                              _dealCards
                              CALL                              giga_vAC                        ; gosub dealCards

                              LDWI                              _displayCards
                              CALL                              giga_vAC                        ; gosub displayCards

                              LDWI                              _selectCard
                              CALL                              giga_vAC                        ; gosub selectCard

_endif_0x03bc                 LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; wait 10

_endif_0x03c5                 LDW                               _inputDevice
                              XORI                              127
                              CALL                              convertEqOpAddr
                              STW                               0xe8
                              LDW                               _currentRound
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              JumpFalse                         _endif_0x03f3 7                 ; if (inputDevice = 127) AND (currentRound = DEAL)

                              LDWI                              _holdCard
                              CALL                              giga_vAC                        ; gosub holdCard

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; wait 10

_endif_0x03f3                 Return                                                            ; return

_initCards                    PUSH                              
                              LDI                               0
                              STW                               _suit                           ; suit = 0

                              LDI                               0
                              STW                               _i                              ; for i = 0 to 51

_next_0x03fe                  LDWI                              0x062c
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              STW                               0xc0
                              LDWI                              _page_0x0400
                              CALL                              giga_vAC
_page_0x0400                  LDW                               0xc0
                              LDW                               _suit
                              DOKE                              memAddr                         ; cardSuit(i) = suit

                              LDW                               _i
                              STW                               mathX
                              LDI                               13
                              STW                               mathY
                              LDWI                              divide16bit
                              CALL                              giga_vAC
                              LDW                               mathRem
                              ADDI                              2
                              STW                               memValue
                              LDWI                              0x0696
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              LDW                               memValue
                              DOKE                              memAddr                         ; cardValue(i) = 2+(i%13)

                              LDWI                              0x05c2
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              LDI                               0
                              DOKE                              memAddr                         ; cardState(i) = INDECK

                              LDW                               _i
                              STW                               mathX
                              LDI                               13
                              STW                               mathY
                              LDWI                              divide16bit
                              CALL                              giga_vAC
                              LDW                               mathRem
                              ADDI                              2
                              XORI                              14
                              JumpEQ                            _endif_0x0481 8                 ; if(2+(i%13) &= 14)

                              LDW                               _suit
                              ADDI                              1
                              STW                               _suit                           ; suit = suit + 1

_endif_0x0481                 ForNextFarInc                     _i _next_0x03fe 51              ; next i

                              Return                                                            ; return

_clearHand                    PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 51

_next_0x0496                  LDWI                              0x05c2
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              LDI                               0
                              DOKE                              memAddr                         ; cardState(i) = INDECK

                              ForNextFarInc                     _i _next_0x0496 51              ; next i

                              LDI                               32
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 32

                              LDI                               32
                              ST                                fgbgColour                      ; set BG_COLOUR, 32

                              LDI                               0
                              STW                               _selectedCard                   ; selectedCard = 0

                              LDI                               7
                              ST                                cursorXY
                              LDI                               51
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72d9
                              NewLine                                                           ; at 7,holdY : print "                         "

                              LDI                               0
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72d9
                              NewLine                                                           ; at 0,110 : print "                         "

                              Return                                                            ; return

_dealCards                    PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 4

_retry1                       LDI                               0x34
                              RandMod                           
                              STW                               _pickedCard                     ; pickedCard = rnd(52)

                              LDWI                              0x05c2
                              ADDW                              _pickedCard
                              ADDW                              _pickedCard
                              DEEK                              
                              XORI                              0
                              JumpEQ                            _else_0x055e 9                  ; if(cardState(pickedCard) &= INDECK)

                              LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              STW                               0xc0
                              LDWI                              _page_0x0500
                              CALL                              giga_vAC
_page_0x0500                  LDW                               0xc0
                              STW                               memAddr
                              LDW                               _pickedCard
                              DOKE                              memAddr                         ; hand(i) = pickedCard

                              LDWI                              0x05c2
                              ADDW                              _pickedCard
                              ADDW                              _pickedCard
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr
                              LDWI                              _endif_0x0563
                              CALL                              giga_vAC                        ; cardState(pickedCard) = DRAWN

_else_0x055e                  LDWI                              _retry1
                              CALL                              giga_vAC                        ; goto retry1

_endif_0x0563                 ForNextFarInc                     _i _retry1 4                    ; next i

                              LDI                               0
                              STW                               _selectedCard                   ; selectedCard = 0

                              Return                                                            ; return

_cheatDeal                    LDWI                              0x72f4
                              STW                               memAddr
                              LDI                               4
                              DOKE                              memAddr                         ; hand(0) = 4

                              LDWI                              0x05ca
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(4) = DRAWN

                              LDWI                              0x72f6
                              STW                               memAddr
                              LDI                               2
                              DOKE                              memAddr                         ; hand(1) = 2

                              LDWI                              0x05c6
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(2) = DRAWN

                              LDWI                              0x72f8
                              STW                               memAddr
                              LDI                               31
                              DOKE                              memAddr                         ; hand(2) = 31

                              LDWI                              0x0600
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(31) = DRAWN

                              LDWI                              0x72fa
                              STW                               memAddr
                              LDI                               18
                              DOKE                              memAddr                         ; hand(3) = 18

                              LDWI                              0x05e6
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(18) = DRAWN

                              LDWI                              0x72fc
                              STW                               memAddr
                              LDI                               5
                              DOKE                              memAddr                         ; hand(4) = 5

                              LDWI                              0x05cc
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(5) = DRAWN

                              LDI                               0
                              STW                               _selectedCard                   ; selectedCard = 0

                              Return                                                            ; return

_drawCards                    PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 4

_next_0x0604                  LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              DEEK                              
                              STW                               _tempCard                       ; tempCard = hand(i)

                              LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x06a6 13                ; if(cardState(tempCard) &= DRAWN)

_retry2                       LDI                               0x34
                              STW                               0xc0
                              LDWI                              _page_0x08a0
                              CALL                              giga_vAC
_page_0x08a0                  LDW                               0xc0
                              RandMod                           
                              STW                               _pickedCard                     ; pickedCard = rnd(52)

                              LDWI                              0x05c2
                              ADDW                              _pickedCard
                              ADDW                              _pickedCard
                              DEEK                              
                              XORI                              0
                              JumpEQ                            _else_0x06a1 11                 ; if(cardState(pickedCard) &= INDECK)

                              LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              STW                               memAddr
                              LDI                               3
                              DOKE                              memAddr                         ; cardState(tempCard) = DISCARDED

                              LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              LDW                               _pickedCard
                              DOKE                              memAddr                         ; hand(i) = pickedCard

                              LDWI                              0x05c2
                              ADDW                              _pickedCard
                              ADDW                              _pickedCard
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr
                              LDWI                              _endif_0x06a6
                              CALL                              giga_vAC                        ; cardState(pickedCard) = DRAWN

_else_0x06a1                  LDWI                              _retry2
                              CALL                              giga_vAC                        ; goto retry2

                              STW                               0xc0
                              LDWI                              _page_0x09a0
                              CALL                              giga_vAC
_page_0x09a0                  LDW                               0xc0
_endif_0x06a6                 ForNextFarInc                     _i _next_0x0604 4               ; next i

                              Return                                                            ; return

_selectCard                   PUSH                              
                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               3
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               32
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 3, cardBorderY, 32, cardBorderY2

                              LDI                               34
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               63
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 34, cardBorderY, 63, cardBorderY2

                              LDI                               65
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               94
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 65, cardBorderY, 94, cardBorderY2

                              LDI                               96
                              STW                               0xc0
                              LDWI                              _page_0x0aa0
                              CALL                              giga_vAC
_page_0x0aa0                  LDW                               0xc0
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               125
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 96, cardBorderY, 125, cardBorderY2

                              LDI                               127
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               156
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 127, cardBorderY, 156, cardBorderY2

                              LDI                               3
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 3

                              LDW                               _selectedCard
                              XORI                              0
                              JumpEQ                            _elseif_0x0752 14               ; if selectedCard &= 0

                              LDI                               3
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               32
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                          
                              LDWI                              _endif_0x07f5
                              CALL                              giga_vAC                        ; rect 3, cardBorderY, 32, cardBorderY2

_elseif_0x0752                LDW                               _selectedCard
                              XORI                              1
                              STW                               0xc0
                              LDWI                              _page_0x0ba0
                              CALL                              giga_vAC
_page_0x0ba0                  LDW                               0xc0
                              JumpEQ                            _elseif_0x077c 15               ; elseif selectedCard &= 1

                              LDI                               34
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               63
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                          
                              LDWI                              _endif_0x07f5
                              CALL                              giga_vAC                        ; rect 34, cardBorderY, 63, cardBorderY2

_elseif_0x077c                LDW                               _selectedCard
                              XORI                              2
                              JumpEQ                            _elseif_0x07a6 16               ; elseif selectedCard &= 2

                              LDI                               65
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               94
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                          
                              LDWI                              _endif_0x07f5
                              CALL                              giga_vAC                        ; rect 65, cardBorderY, 94, cardBorderY2

_elseif_0x07a6                LDW                               _selectedCard
                              XORI                              3
                              JumpEQ                            _elseif_0x07d0 17               ; elseif selectedCard &= 3

                              LDI                               96
                              STW                               0xc0
                              LDWI                              _page_0x0ca0
                              CALL                              giga_vAC
_page_0x0ca0                  LDW                               0xc0
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               125
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                          
                              LDWI                              _endif_0x07f5
                              CALL                              giga_vAC                        ; rect 96, cardBorderY, 125, cardBorderY2

_elseif_0x07d0                LDW                               _selectedCard
                              XORI                              4
                              JumpEQ                            _endif_0x07f5 18                ; elseif selectedCard &= 4

                              LDI                               127
                              STW                               drawRect_x1
                              LDI                               60
                              STW                               drawRect_y1
                              LDI                               156
                              STW                               drawRect_x2
                              LDI                               107
                              STW                               drawRect_y2
                              DrawRect                                                          ; rect 127, cardBorderY, 156, cardBorderY2

_endif_0x07f5                 Return                                                            ; return

_holdCard                     PUSH                              
                              LDI                               31
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 31

                              LDI                               32
                              ST                                fgbgColour                      ; set BG_COLOUR, 32

                              LDW                               _selectedCard
                              XORI                              0
                              JumpEQ                            _elseif_0x0819 19               ; if selectedCard &= 0

                              LDI                               7
                              STW                               _holdX
                              STW                               0xc0
                              LDWI                              _page_0x0da0
                              CALL                              giga_vAC
_page_0x0da0                  LDW                               0xc0
                              LDWI                              _endif_0x0878
                              CALL                              giga_vAC                        ; holdX = 7

_elseif_0x0819                LDW                               _selectedCard
                              XORI                              1
                              JumpEQ                            _elseif_0x0832 20               ; elseif selectedCard &= 1

                              LDI                               38
                              STW                               _holdX
                              LDWI                              _endif_0x0878
                              CALL                              giga_vAC                        ; holdX = 38

_elseif_0x0832                LDW                               _selectedCard
                              XORI                              2
                              JumpEQ                            _elseif_0x084b 21               ; elseif selectedCard &= 2

                              LDI                               69
                              STW                               _holdX
                              LDWI                              _endif_0x0878
                              CALL                              giga_vAC                        ; holdX = 69

_elseif_0x084b                LDW                               _selectedCard
                              XORI                              3
                              JumpEQ                            _elseif_0x0864 22               ; elseif selectedCard &= 3

                              LDI                               100
                              STW                               _holdX
                              LDWI                              _endif_0x0878
                              CALL                              giga_vAC                        ; holdX = 100

_elseif_0x0864                LDW                               _selectedCard
                              XORI                              4
                              JumpEQ                            _endif_0x0878 23                ; elseif selectedCard &= 4

                              LDI                               131
                              STW                               _holdX                          ; holdX = 131

                              STW                               0xc0
                              LDWI                              _page_0x0ea0
                              CALL                              giga_vAC
_page_0x0ea0                  LDW                               0xc0
_endif_0x0878                 LDWI                              0x72f4
                              ADDW                              _selectedCard
                              ADDW                              _selectedCard
                              DEEK                              
                              STW                               _tempCard                       ; tempCard = hand(selectedCard)

                              LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _elseif_0x08dc 24               ; if cardState(tempCard) &= DRAWN

                              LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              STW                               memAddr
                              LDI                               2
                              DOKE                              memAddr                         ; cardState(tempCard) = HELD

                              LDW                               _holdX
                              ST                                cursorXY
                              LDI                               51
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72d3
                              NewLine                           
                              LDWI                              _endif_0x092b
                              CALL                              giga_vAC                        ; at holdX,holdY : print "HELD"

_elseif_0x08dc                LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              DEEK                              
                              XORI                              2
                              STW                               0xc0
                              LDWI                              _page_0x0fa0
                              CALL                              giga_vAC
_page_0x0fa0                  LDW                               0xc0
                              JumpEQ                            _endif_0x092b 25                ; elseif cardState(tempCard) &= HELD

                              LDWI                              0x05c2
                              ADDW                              _tempCard
                              ADDW                              _tempCard
                              STW                               memAddr
                              LDI                               1
                              DOKE                              memAddr                         ; cardState(tempCard) = DRAWN

                              LDW                               _holdX
                              ST                                cursorXY
                              LDI                               51
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72cd
                              NewLine                                                           ; at holdX,holdY : print "    "

_endif_0x092b                 Return                                                            ; return

_displayPayouts               PUSH                              
                              LDI                               16
                              ST                                fgbgColour                      ; set BG_COLOUR, 16

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              10
                              JumpEQ                            _endif_0x094a 26                ; if winType &= ROYALFLUSH

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x094a                 LDI                               32
                              ST                                cursorXY
                              LDI                               2
                              ST                                cursorXY + 1
                              STW                               0xc0
                              LDWI                              _page_0x10a0
                              CALL                              giga_vAC
_page_0x10a0                  LDW                               0xc0
                              AtTextCursor                      
                              PrintString                       _str_0x72bb
                              NewLine                                                           ; at 32,2 :  print "Royal Flush x250"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              9
                              JumpEQ                            _endif_0x097e 27                ; if winType &= STRAIGHTFLUSH

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x097e                 LDI                               5
                              ST                                cursorXY
                              LDI                               11
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72ad
                              NewLine                                                           ; at 5,11 : print "S.Flush  x50"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              7
                              JumpEQ                            _endif_0x09b2 28                ; if winType &= FOUROFAKIND

                              LDI                               15
                              STW                               0xc0
                              LDWI                              _page_0x11a0
                              CALL                              giga_vAC
_page_0x11a0                  LDW                               0xc0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x09b2                 LDI                               5
                              ST                                cursorXY
                              LDI                               20
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71f2
                              NewLine                                                           ; at 5,20 : print "4-Kind   x25"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              6
                              JumpEQ                            _endif_0x09e6 29                ; if winType &= FULLHOUSE

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x09e6                 LDI                               5
                              ST                                cursorXY
                              LDI                               29
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x72a0
                              NewLine                                                           ; at 5,29 : print "F.House  x9"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              5
                              STW                               0xc0
                              LDWI                              _page_0x12a0
                              CALL                              giga_vAC
_page_0x12a0                  LDW                               0xc0
                              JumpEQ                            _endif_0x0a1a 30                ; if winType &= FLUSH

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x0a1a                 LDI                               5
                              ST                                cursorXY
                              LDI                               38
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71e5
                              NewLine                                                           ; at 5,38 : print "Flush    x6"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              4
                              JumpEQ                            _endif_0x0a4e 31                ; if winType &= STRAIGHT

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x0a4e                 LDI                               90
                              ST                                cursorXY
                              LDI                               11
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71d8
                              STW                               0xc0
                              LDWI                              _page_0x13a0
                              CALL                              giga_vAC
_page_0x13a0                  LDW                               0xc0
                              NewLine                                                           ; at 90,11 : print "Straight x4"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              3
                              JumpEQ                            _endif_0x0a82 32                ; if winType &= THREEOFAKIND

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x0a82                 LDI                               90
                              ST                                cursorXY
                              LDI                               20
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71cb
                              NewLine                                                           ; at 90,20 : print "3-Kind   x3"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              2
                              JumpEQ                            _endif_0x0ab6 33                ; if winType &= TWOPAIR

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x0ab6                 LDI                               90
                              ST                                cursorXY
                              LDI                               29
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              STW                               0xc0
                              LDWI                              _page_0x14a0
                              CALL                              giga_vAC
_page_0x14a0                  LDW                               0xc0
                              PrintString                       _str_0x71be
                              NewLine                                                           ; at 90,29 : print "Two Pair x2"

                              LDI                               42
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 42

                              LDW                               _winType
                              XORI                              1
                              JumpEQ                            _endif_0x0aea 34                ; if winType &= JACKSORBETTER

                              LDI                               15
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 15

_endif_0x0aea                 LDI                               90
                              ST                                cursorXY
                              LDI                               38
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71b1
                              NewLine                                                           ; at 90,38 : print "Jacks+   x1"

                              Return                                                            ; return

_displayCards                 PUSH                              
                              LDI                               63
                              ST                                fgbgColour                      ; set BG_COLOUR, 63

                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x05c2
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x15a0
                              CALL                              giga_vAC
_page_0x15a0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x0d4f 42                ; if cardState(hand(0)) &= DRAWN

                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               3
                              STW                               drawRectF_x1
                              LDI                               60
                              STW                               drawRectF_y1
                              LDI                               32
                              STW                               drawRectF_x2
                              LDI                               107
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 3, cardBorderY, 32, cardBorderY2

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; WAIT 10

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               4
                              STW                               drawRectF_x1
                              LDI                               61
                              STW                               drawRectF_y1
                              LDI                               31
                              STW                               drawRectF_x2
                              LDI                               106
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 4, cardY, 31, cardY2

                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x062c
                              STW                               0xc0
                              LDWI                              _page_0x16a0
                              CALL                              giga_vAC
_page_0x16a0                  LDW                               0xc0
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ORW                               0xea
                              JumpFalse                         _else_0x0bc9 35                 ; if (cardSuit(hand(0)) = HEARTS) OR (cardSuit(hand(0)) = DIAMONDS)

                              LDI                               3
                              ST                                fgbgColour + 1
                              LDWI                              _endif_0x0bcd
                              CALL                              giga_vAC                        ; set FG_COLOUR, 3

_else_0x0bc9                  LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

_endif_0x0bcd                 LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              JumpEQ                            _elseif_0x0c16 37               ; if cardValue(hand(0)) &= 14

                              LDI                               7
                              STW                               0xc0
                              LDWI                              _page_0x17a0
                              CALL                              giga_vAC
_page_0x17a0                  LDW                               0xc0
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ea2
                              NewLine                           
                              LDWI                              _endif_0x0d24
                              CALL                              giga_vAC                        ; at 7,cardValueY : print "A"

_elseif_0x0c16                LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              JumpEQ                            _elseif_0x0c5f 38               ; elseif cardValue(hand(0)) &= 13

                              LDI                               7
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7da2
                              STW                               0xc0
                              LDWI                              _page_0x18a0
                              CALL                              giga_vAC
_page_0x18a0                  LDW                               0xc0
                              NewLine                           
                              LDWI                              _endif_0x0d24
                              CALL                              giga_vAC                        ; at 7,cardValueY : print "K"

_elseif_0x0c5f                LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              JumpEQ                            _elseif_0x0ca8 39               ; elseif cardValue(hand(0)) &= 12

                              LDI                               7
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ca2
                              NewLine                           
                              LDWI                              _endif_0x0d24
                              CALL                              giga_vAC                        ; at 7,cardValueY : print "Q"

_elseif_0x0ca8                LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x19a0
                              CALL                              giga_vAC
_page_0x19a0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              JumpEQ                            _else_0x0cf1 40                 ; elseif cardValue(hand(0)) &= 11

                              LDI                               7
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ba2
                              NewLine                           
                              LDWI                              _endif_0x0d24
                              CALL                              giga_vAC                        ; at 7,cardValueY : print "J"

_else_0x0cf1                  LDI                               7
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              PrintAcInt16                      
                              STW                               0xc0
                              LDWI                              _page_0x1aa0
                              CALL                              giga_vAC
_page_0x1aa0                  LDW                               0xc0
                              NewLine                                                           ; at 7,cardValueY : print cardValue(hand(0))

_endif_0x0d24                 LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               spriteId
                              LDI                               11
                              ST                                spriteXY
                              LDI                               78
                              ADDI                              8
                              ST                                spriteXY + 1
                              DrawSprite                                                        ; sprite noFlip, cardSuit(hand(0)), 11, cardSuitY

_endif_0x0d4f                 LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x05c2
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x0f91 50                ; if cardState(hand(1)) &= DRAWN

                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               34
                              STW                               drawRectF_x1
                              LDI                               60
                              STW                               drawRectF_y1
                              LDI                               63
                              STW                               drawRectF_x2
                              LDI                               107
                              STW                               0xc0
                              LDWI                              _page_0x1ba0
                              CALL                              giga_vAC
_page_0x1ba0                  LDW                               0xc0
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 34, cardBorderY, 63, cardBorderY2

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; WAIT 10

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               35
                              STW                               drawRectF_x1
                              LDI                               61
                              STW                               drawRectF_y1
                              LDI                               62
                              STW                               drawRectF_x2
                              LDI                               106
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 35, cardY, 62, cardY2

                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              STW                               0xc0
                              LDWI                              _page_0x1ca0
                              CALL                              giga_vAC
_page_0x1ca0                  LDW                               0xc0
                              CALL                              convertEqOpAddr
                              ORW                               0xea
                              JumpFalse                         _else_0x0e0b 43                 ; if (cardSuit(hand(1)) = HEARTS) OR (cardSuit(hand(1)) = DIAMONDS)

                              LDI                               3
                              ST                                fgbgColour + 1
                              LDWI                              _endif_0x0e0f
                              CALL                              giga_vAC                        ; set FG_COLOUR, 3

_else_0x0e0b                  LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

_endif_0x0e0f                 LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              JumpEQ                            _elseif_0x0e58 45               ; if cardValue(hand(1)) &= 14

                              LDI                               38
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ea2
                              NewLine                           
                              LDWI                              _endif_0x0f66
                              CALL                              giga_vAC                        ; at 38,cardValueY : print "A"

                              STW                               0xc0
                              LDWI                              _page_0x1da0
                              CALL                              giga_vAC
_page_0x1da0                  LDW                               0xc0
_elseif_0x0e58                LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              JumpEQ                            _elseif_0x0ea1 46               ; elseif cardValue(hand(1)) &= 13

                              LDI                               38
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7da2
                              NewLine                           
                              LDWI                              _endif_0x0f66
                              CALL                              giga_vAC                        ; at 38,cardValueY : print "K"

_elseif_0x0ea1                LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              STW                               0xc0
                              LDWI                              _page_0x1ea0
                              CALL                              giga_vAC
_page_0x1ea0                  LDW                               0xc0
                              JumpEQ                            _elseif_0x0eea 47               ; elseif cardValue(hand(1)) &= 12

                              LDI                               38
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ca2
                              NewLine                           
                              LDWI                              _endif_0x0f66
                              CALL                              giga_vAC                        ; at 38,cardValueY : print "Q"

_elseif_0x0eea                LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              JumpEQ                            _else_0x0f33 48                 ; elseif cardValue(hand(1)) &= 11

                              LDI                               38
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              STW                               0xc0
                              LDWI                              _page_0x1fa0
                              CALL                              giga_vAC
_page_0x1fa0                  LDW                               0xc0
                              PrintString                       _str_0x7ba2
                              NewLine                           
                              LDWI                              _endif_0x0f66
                              CALL                              giga_vAC                        ; at 38,cardValueY : print "J"

_else_0x0f33                  LDI                               38
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              PrintAcInt16                      
                              NewLine                                                           ; at 38,cardValueY : print cardValue(hand(1))

_endif_0x0f66                 LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               spriteId
                              LDI                               42
                              STW                               0xc0
                              LDWI                              _page_0x20a0
                              CALL                              giga_vAC
_page_0x20a0                  LDW                               0xc0
                              ST                                spriteXY
                              LDI                               78
                              ADDI                              8
                              ST                                spriteXY + 1
                              DrawSprite                                                        ; sprite noFlip, cardSuit(hand(1)), 42, cardSuitY

_endif_0x0f91                 LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x05c2
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x11d3 58                ; if cardState(hand(2)) &= DRAWN

                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               65
                              STW                               drawRectF_x1
                              LDI                               60
                              STW                               drawRectF_y1
                              LDI                               94
                              STW                               drawRectF_x2
                              LDI                               107
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 65, cardBorderY, 94, cardBorderY2

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; WAIT 10

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               66
                              STW                               drawRectF_x1
                              LDI                               61
                              STW                               0xc0
                              LDWI                              _page_0x21a0
                              CALL                              giga_vAC
_page_0x21a0                  LDW                               0xc0
                              STW                               drawRectF_y1
                              LDI                               93
                              STW                               drawRectF_x2
                              LDI                               106
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 66, cardY, 93, cardY2

                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ORW                               0xea
                              JumpFalse                         _else_0x104d 51                 ; if (cardSuit(hand(2)) = HEARTS) OR (cardSuit(hand(2)) = DIAMONDS)

                              LDI                               3
                              ST                                fgbgColour + 1
                              LDWI                              _endif_0x1051
                              CALL                              giga_vAC                        ; set FG_COLOUR, 3

_else_0x104d                  LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              STW                               0xc0
                              LDWI                              _page_0x22a0
                              CALL                              giga_vAC
_page_0x22a0                  LDW                               0xc0
_endif_0x1051                 LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              JumpEQ                            _elseif_0x109a 53               ; if cardValue(hand(2)) &= 14

                              LDI                               69
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ea2
                              NewLine                           
                              LDWI                              _endif_0x11a8
                              CALL                              giga_vAC                        ; at 69,cardValueY : print "A"

_elseif_0x109a                LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              STW                               0xc0
                              LDWI                              _page_0x23a0
                              CALL                              giga_vAC
_page_0x23a0                  LDW                               0xc0
                              JumpEQ                            _elseif_0x10e3 54               ; elseif cardValue(hand(2)) &= 13

                              LDI                               69
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7da2
                              NewLine                           
                              LDWI                              _endif_0x11a8
                              CALL                              giga_vAC                        ; at 69,cardValueY : print "K"

_elseif_0x10e3                LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              JumpEQ                            _elseif_0x112c 55               ; elseif cardValue(hand(2)) &= 12

                              LDI                               69
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              STW                               0xc0
                              LDWI                              _page_0x24a0
                              CALL                              giga_vAC
_page_0x24a0                  LDW                               0xc0
                              PrintString                       _str_0x7ca2
                              NewLine                           
                              LDWI                              _endif_0x11a8
                              CALL                              giga_vAC                        ; at 69,cardValueY : print "Q"

_elseif_0x112c                LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              JumpEQ                            _else_0x1175 56                 ; elseif cardValue(hand(2)) &= 11

                              LDI                               69
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ba2
                              NewLine                           
                              LDWI                              _endif_0x11a8
                              CALL                              giga_vAC                        ; at 69,cardValueY : print "J"

_else_0x1175                  LDI                               69
                              ST                                cursorXY
                              STW                               0xc0
                              LDWI                              _page_0x25a0
                              CALL                              giga_vAC
_page_0x25a0                  LDW                               0xc0
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              PrintAcInt16                      
                              NewLine                                                           ; at 69,cardValueY : print cardValue(hand(2))

_endif_0x11a8                 LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               spriteId
                              LDI                               73
                              ST                                spriteXY
                              LDI                               78
                              ADDI                              8
                              ST                                spriteXY + 1
                              DrawSprite                                                        ; sprite noFlip, cardSuit(hand(2)), 73, cardSuitY

_endif_0x11d3                 LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              STW                               0xc0
                              LDWI                              _page_0x26a0
                              CALL                              giga_vAC
_page_0x26a0                  LDW                               0xc0
                              LDWI                              0x05c2
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x1415 66                ; if cardState(hand(3)) &= DRAWN

                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               96
                              STW                               drawRectF_x1
                              LDI                               60
                              STW                               drawRectF_y1
                              LDI                               125
                              STW                               drawRectF_x2
                              LDI                               107
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 96, cardBorderY, 125, cardBorderY2

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; WAIT 10

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               97
                              STW                               drawRectF_x1
                              LDI                               61
                              STW                               drawRectF_y1
                              LDI                               124
                              STW                               drawRectF_x2
                              LDI                               106
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 97, cardY, 124, cardY2

                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               0xc0
                              LDWI                              _page_0x27a0
                              CALL                              giga_vAC
_page_0x27a0                  LDW                               0xc0
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ORW                               0xea
                              JumpFalse                         _else_0x128f 59                 ; if (cardSuit(hand(3)) = HEARTS) OR (cardSuit(hand(3)) = DIAMONDS)

                              LDI                               3
                              ST                                fgbgColour + 1
                              LDWI                              _endif_0x1293
                              CALL                              giga_vAC                        ; set FG_COLOUR, 3

_else_0x128f                  LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

_endif_0x1293                 LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              STW                               0xc0
                              LDWI                              _page_0x28a0
                              CALL                              giga_vAC
_page_0x28a0                  LDW                               0xc0
                              JumpEQ                            _elseif_0x12dc 61               ; if cardValue(hand(3)) &= 14

                              LDI                               100
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ea2
                              NewLine                           
                              LDWI                              _endif_0x13ea
                              CALL                              giga_vAC                        ; at 100,cardValueY : print "A"

_elseif_0x12dc                LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              JumpEQ                            _elseif_0x1325 62               ; elseif cardValue(hand(3)) &= 13

                              LDI                               100
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              STW                               0xc0
                              LDWI                              _page_0x29a0
                              CALL                              giga_vAC
_page_0x29a0                  LDW                               0xc0
                              PrintString                       _str_0x7da2
                              NewLine                           
                              LDWI                              _endif_0x13ea
                              CALL                              giga_vAC                        ; at 100,cardValueY : print "K"

_elseif_0x1325                LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              JumpEQ                            _elseif_0x136e 63               ; elseif cardValue(hand(3)) &= 12

                              LDI                               100
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ca2
                              NewLine                           
                              LDWI                              _endif_0x13ea
                              CALL                              giga_vAC                        ; at 100,cardValueY : print "Q"

_elseif_0x136e                LDWI                              0x72fa
                              DEEK                              
                              STW                               0xc0
                              LDWI                              _page_0x2aa0
                              CALL                              giga_vAC
_page_0x2aa0                  LDW                               0xc0
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              JumpEQ                            _else_0x13b7 64                 ; elseif cardValue(hand(3)) &= 11

                              LDI                               100
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ba2
                              NewLine                           
                              LDWI                              _endif_0x13ea
                              CALL                              giga_vAC                        ; at 100,cardValueY : print "J"

_else_0x13b7                  LDI                               100
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x2ba0
                              CALL                              giga_vAC
_page_0x2ba0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              PrintAcInt16                      
                              NewLine                                                           ; at 100,cardValueY : print cardValue(hand(3))

_endif_0x13ea                 LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               spriteId
                              LDI                               104
                              ST                                spriteXY
                              LDI                               78
                              ADDI                              8
                              ST                                spriteXY + 1
                              DrawSprite                                                        ; sprite noFlip, cardSuit(hand(3)), 104, cardSuitY

_endif_0x1415                 LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x05c2
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              JumpEQ                            _endif_0x1657 74                ; if cardState(hand(4)) &= DRAWN

                              LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

                              LDI                               127
                              STW                               drawRectF_x1
                              STW                               0xc0
                              LDWI                              _page_0x2ca0
                              CALL                              giga_vAC
_page_0x2ca0                  LDW                               0xc0
                              LDI                               60
                              STW                               drawRectF_y1
                              LDI                               156
                              STW                               drawRectF_x2
                              LDI                               107
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 127, cardBorderY, 156, cardBorderY2

                              LDI                               10
                              STW                               waitVBlankNum
                              WaitVBlanks                                                       ; WAIT 10

                              LDI                               63
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 63

                              LDI                               128
                              STW                               drawRectF_x1
                              LDI                               61
                              STW                               drawRectF_y1
                              LDI                               155
                              STW                               drawRectF_x2
                              LDI                               106
                              STW                               drawRectF_y2
                              DrawRectF                                                         ; rectf 128, cardY, 155, cardY2

                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              STW                               0xc0
                              LDWI                              _page_0x2da0
                              CALL                              giga_vAC
_page_0x2da0                  LDW                               0xc0
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ORW                               0xea
                              JumpFalse                         _else_0x14d1 67                 ; if (cardSuit(hand(4)) = HEARTS) OR (cardSuit(hand(4)) = DIAMONDS)

                              LDI                               3
                              ST                                fgbgColour + 1
                              LDWI                              _endif_0x14d5
                              CALL                              giga_vAC                        ; set FG_COLOUR, 3

_else_0x14d1                  LDI                               0
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 0

_endif_0x14d5                 LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              JumpEQ                            _elseif_0x151e 69               ; if cardValue(hand(4)) &= 14

                              LDI                               131
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ea2
                              STW                               0xc0
                              LDWI                              _page_0x2ea0
                              CALL                              giga_vAC
_page_0x2ea0                  LDW                               0xc0
                              NewLine                           
                              LDWI                              _endif_0x162c
                              CALL                              giga_vAC                        ; at 131,cardValueY : print "A"

_elseif_0x151e                LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              JumpEQ                            _elseif_0x1567 70               ; elseif cardValue(hand(4)) &= 13

                              LDI                               131
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7da2
                              NewLine                           
                              LDWI                              _endif_0x162c
                              CALL                              giga_vAC                        ; at 131,cardValueY : print "K"

_elseif_0x1567                LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x2fa0
                              CALL                              giga_vAC
_page_0x2fa0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              JumpEQ                            _elseif_0x15b0 71               ; elseif cardValue(hand(4)) &= 12

                              LDI                               131
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x7ca2
                              NewLine                           
                              LDWI                              _endif_0x162c
                              CALL                              giga_vAC                        ; at 131,cardValueY : print "Q"

_elseif_0x15b0                LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              JumpEQ                            _else_0x15f9 72                 ; elseif cardValue(hand(4)) &= 11

                              LDI                               131
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              STW                               0xc0
                              LDWI                              _page_0x30a0
                              CALL                              giga_vAC
_page_0x30a0                  LDW                               0xc0
                              AtTextCursor                      
                              PrintString                       _str_0x7ba2
                              NewLine                           
                              LDWI                              _endif_0x162c
                              CALL                              giga_vAC                        ; at 131,cardValueY : print "J"

_else_0x15f9                  LDI                               131
                              ST                                cursorXY
                              LDI                               63
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              PrintAcInt16                      
                              NewLine                                                           ; at 131,cardValueY : print cardValue(hand(4))

_endif_0x162c                 LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xc0
                              LDWI                              _page_0x31a0
                              CALL                              giga_vAC
_page_0x31a0                  LDW                               0xc0
                              STW                               spriteId
                              LDI                               135
                              ST                                spriteXY
                              LDI                               78
                              ADDI                              8
                              ST                                spriteXY + 1
                              DrawSprite                                                        ; sprite noFlip, cardSuit(hand(4)), 135, cardSuitY

_endif_0x1657                 Return                                                            ; return

_sortCards                    PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 3

_next_0x165e                  LDI                               1
                              ADDW                              _i
                              STW                               _j
                              LDI                               4
                              STW                               0xb4
                              LDI                               1
                              STW                               0xb6                            ; for j = (1 + i) to 4

_next_0x1670                  LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              DEEK                              
                              STW                               _tempValue1                     ; tempValue1 = hand(i)

                              LDWI                              0x72f4
                              ADDW                              _j
                              ADDW                              _j
                              DEEK                              
                              STW                               _tempValue2                     ; tempValue2 = hand(j)

                              LDWI                              0x0696
                              ADDW                              _tempValue1
                              ADDW                              _tempValue1
                              DEEK                              
                              STW                               0xe8
                              LDWI                              0x0696
                              ADDW                              _tempValue2
                              ADDW                              _tempValue2
                              DEEK                              
                              STW                               0xea
                              LDW                               0xe8
                              SUBW                              0xea
                              STW                               0xc0
                              LDWI                              _page_0x32a0
                              CALL                              giga_vAC
_page_0x32a0                  LDW                               0xc0
                              JumpGT                            _endif_0x1702 75                ; if cardValue(tempValue1) &> cardValue(tempValue2)

                              LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              DEEK                              
                              STW                               _tempCard                       ; tempCard = hand(i)

                              LDWI                              0x72f4
                              ADDW                              _j
                              ADDW                              _j
                              DEEK                              
                              STW                               memValue
                              LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              STW                               memAddr
                              LDW                               memValue
                              DOKE                              memAddr                         ; hand(i) = hand(j)

                              LDWI                              0x72f4
                              ADDW                              _j
                              ADDW                              _j
                              STW                               memAddr
                              LDW                               _tempCard
                              DOKE                              memAddr                         ; hand(j) = tempCard

_endif_0x1702                 ForNextFarVarAdd                  _j _next_0x1670 0xb4 0xb6       ; next j

                              ForNextFarInc                     _i _next_0x165e 3               ; next i

                              Return                                                            ; return

                              STW                               0xc0
                              LDWI                              _page_0x33a0
                              CALL                              giga_vAC
_page_0x33a0                  LDW                               0xc0
_checkHand                    PUSH                              
                              LDI                               0
                              STW                               _straightFlag                   ; straightFlag = 0

                              LDI                               0
                              STW                               _flushFlag                      ; flushFlag = 0

                              LDI                               0
                              STW                               _winType                        ; winType = NONE

                              LDI                               31
                              ST                                fgbgColour + 1                  ; set FG_COLOUR, 31

                              LDI                               32
                              ST                                fgbgColour                      ; set BG_COLOUR, 32

                              LDWI                              _sortCards
                              CALL                              giga_vAC                        ; gosub sortCards

                              LDWI                              _flush
                              CALL                              giga_vAC                        ; gosub flush

                              LDWI                              _straight
                              CALL                              giga_vAC                        ; gosub straight

                              LDWI                              _royalFlush
                              CALL                              giga_vAC                        ; gosub royalFlush

                              LDW                               _winType
                              XORI                              10
                              JumpEQ                            _endif_0x1779 76                ; if winType &= ROYALFLUSH

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x71a3
                              NewLine                                                           ; at 10,110 : print "Royal Flush!"

                              Return                                                            ; return

_endif_0x1779                 LDWI                              _straightFlush
                              STW                               0xc0
                              LDWI                              _page_0x34a0
                              CALL                              giga_vAC
_page_0x34a0                  LDW                               0xc0
                              CALL                              giga_vAC                        ; gosub straightFlush

                              LDW                               _winType
                              XORI                              9
                              JumpEQ                            _endif_0x17ac 77                ; if winType &= STRAIGHTFLUSH

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x70ef
                              NewLine                                                           ; at 10,110 : print "Straight Flush!"

                              Return                                                            ; return

_endif_0x17ac                 LDWI                              _fourOfAKind
                              CALL                              giga_vAC                        ; gosub fourOfAKind

                              LDW                               _winType
                              XORI                              7
                              JumpEQ                            _endif_0x17df 78                ; if winType &= FOUROFAKIND

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x70de
                              STW                               0xc0
                              LDWI                              _page_0x35a0
                              CALL                              giga_vAC
_page_0x35a0                  LDW                               0xc0
                              NewLine                                                           ; at 10,110 : print "Four of a Kind!"

                              Return                                                            ; return

_endif_0x17df                 LDWI                              _fullHouse
                              CALL                              giga_vAC                        ; gosub fullHouse

                              LDW                               _winType
                              XORI                              6
                              JumpEQ                            _endif_0x1812 79                ; if winType &= FULLHOUSE

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x70d1
                              NewLine                                                           ; at 10,110 : print "Full House!"

                              Return                                                            ; return

_endif_0x1812                 LDW                               _flushFlag
                              XORI                              1
                              JumpEQ                            _endif_0x1840 80                ; if flushFlag &= 1

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              STW                               0xc0
                              LDWI                              _page_0x36a0
                              CALL                              giga_vAC
_page_0x36a0                  LDW                               0xc0
                              PrintString                       _str_0x70c9
                              NewLine                                                           ; at 10,110 : print "Flush!"

                              Return                                                            ; return

_endif_0x1840                 LDW                               _straightFlag
                              XORI                              1
                              JumpEQ                            _endif_0x186e 81                ; if straightFlag &= 1

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x70be
                              NewLine                                                           ; at 10,110 : print "Straight!"

                              Return                                                            ; return

_endif_0x186e                 LDWI                              _threeOfAKind
                              CALL                              giga_vAC                        ; gosub threeOfAKind

                              LDW                               _winType
                              XORI                              3
                              JumpEQ                            _endif_0x18a1 82                ; if winType &= THREEOFAKIND

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              STW                               0xc0
                              LDWI                              _page_0x37a0
                              CALL                              giga_vAC
_page_0x37a0                  LDW                               0xc0
                              AtTextCursor                      
                              PrintString                       _str_0x70ac
                              NewLine                                                           ; at 10,110 : print "Three of a Kind!"

                              Return                                                            ; return

_endif_0x18a1                 LDWI                              _twoPair
                              CALL                              giga_vAC                        ; gosub twoPair

                              LDW                               _winType
                              XORI                              2
                              JumpEQ                            _endif_0x18d4 83                ; if winType &= TWOPAIR

                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x70a1
                              NewLine                                                           ; at 10,110 : print "Two Pair!"

                              Return                                                            ; return

_endif_0x18d4                 LDWI                              _jacksOrBetter
                              CALL                              giga_vAC                        ; gosub jacksOrBetter

                              LDW                               _winType
                              XORI                              1
                              JumpEQ                            _endif_0x1907 84                ; if winType &= JACKSORBETTER

                              STW                               0xc0
                              LDWI                              _page_0x38a0
                              CALL                              giga_vAC
_page_0x38a0                  LDW                               0xc0
                              LDI                               10
                              ST                                cursorXY
                              LDI                               110
                              ST                                cursorXY + 1
                              AtTextCursor                      
                              PrintString                       _str_0x6fee
                              NewLine                                                           ; at 10,110 : print "Jacks or Better!"

                              Return                                                            ; return

_endif_0x1907                 Return                                                            ; return

_jacksOrBetter                PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 4

_next_0x190e                  LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              DEEK                              
                              STW                               _tempValue1                     ; tempValue1 = hand(i)

                              LDW                               _i
                              ADDI                              1
                              STW                               memIndex0
                              LDWI                              0x72f4
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               _tempValue2                     ; tempValue2 = hand(i+1)

                              LDWI                              0x0696
                              ADDW                              _tempValue1
                              ADDW                              _tempValue1
                              DEEK                              
                              STW                               0xe8
                              LDWI                              0x0696
                              ADDW                              _tempValue2
                              ADDW                              _tempValue2
                              DEEK                              
                              XORW                              0xe8
                              CALL                              convertEqOpAddr
                              STW                               0xc0
                              LDWI                              _page_0x39a0
                              CALL                              giga_vAC
_page_0x39a0                  LDW                               0xc0
                              STW                               0xea
                              LDWI                              0x0696
                              ADDW                              _tempValue2
                              ADDW                              _tempValue2
                              DEEK                              
                              SUBI                              10
                              CALL                              convertGtOpAddr
                              ANDW                              0xea
                              JumpFalse                         _endif_0x1982 85                ; if (cardValue(tempValue1) = cardValue(tempValue2)) AND (cardValue(tempValue2) > 10)

                              LDI                               1
                              STW                               _winType                        ; winType = JACKSORBETTER

_endif_0x1982                 ForNextFarInc                     _i _next_0x190e 4               ; next i

                              Return                                                            ; return

_twoPair                      PUSH                              
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              STW                               0xc0
                              LDWI                              _page_0x3aa0
                              CALL                              giga_vAC
_page_0x3aa0                  LDW                               0xc0
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _elseif_0x1a1c 86               ; if (cardValue(hand(0)) = cardValue(hand(1))) AND (cardValue(hand(2)) = cardValue(hand(3)))

                              LDI                               2
                              STW                               _winType
                              LDWI                              _endif_0x1b29
                              CALL                              giga_vAC                        ; winType = TWOPAIR

_elseif_0x1a1c                LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              STW                               0xc0
                              LDWI                              _page_0x3ba0
                              CALL                              giga_vAC
_page_0x3ba0                  LDW                               0xc0
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _elseif_0x1aa5 87               ; elseif (cardValue(hand(1)) = cardValue(hand(2))) AND (cardValue(hand(3)) = cardValue(hand(4)))

                              LDI                               2
                              STW                               _winType
                              LDWI                              _endif_0x1b29
                              CALL                              giga_vAC                        ; winType = TWOPAIR

                              STW                               0xc0
                              LDWI                              _page_0x3ca0
                              CALL                              giga_vAC
_page_0x3ca0                  LDW                               0xc0
_elseif_0x1aa5                LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xc0
                              LDWI                              _page_0x3da0
                              CALL                              giga_vAC
_page_0x3da0                  LDW                               0xc0
                              ANDW                              0xee
                              JumpFalse                         _endif_0x1b29 88                ; elseif (cardValue(hand(0)) = cardValue(hand(1))) AND (cardValue(hand(3)) = cardValue(hand(4)))

                              LDI                               2
                              STW                               _winType                        ; winType = TWOPAIR

_endif_0x1b29                 Return                                                            ; return

_threeOfAKind                 PUSH                              
                              LDI                               0
                              STW                               _i                              ; for i = 0 to 2

_next_0x1b30                  LDWI                              0x72f4
                              ADDW                              _i
                              ADDW                              _i
                              DEEK                              
                              STW                               _tempValue1                     ; tempValue1 = hand(i)

                              LDW                               _i
                              ADDI                              1
                              STW                               memIndex0
                              LDWI                              0x72f4
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               _tempValue2                     ; tempValue2 = hand(i+1)

                              LDW                               _i
                              ADDI                              2
                              STW                               memIndex0
                              LDWI                              0x72f4
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               _tempValue3                     ; tempValue3 = hand(i+2)

                              LDWI                              0x0696
                              ADDW                              _tempValue1
                              ADDW                              _tempValue1
                              DEEK                              
                              STW                               0xe8
                              LDWI                              0x0696
                              ADDW                              _tempValue2
                              ADDW                              _tempValue2
                              DEEK                              
                              XORW                              0xe8
                              CALL                              convertEqOpAddr
                              STW                               0xc0
                              LDWI                              _page_0x3ea0
                              CALL                              giga_vAC
_page_0x3ea0                  LDW                               0xc0
                              STW                               0xea
                              LDWI                              0x0696
                              ADDW                              _tempValue2
                              ADDW                              _tempValue2
                              DEEK                              
                              STW                               0xec
                              LDWI                              0x0696
                              ADDW                              _tempValue3
                              ADDW                              _tempValue3
                              DEEK                              
                              XORW                              0xec
                              CALL                              convertEqOpAddr
                              ANDW                              0xea
                              JumpFalse                         _endif_0x1bc8 89                ; if (cardValue(tempValue1) = cardValue(tempValue2)) AND (cardValue(tempValue2) = cardValue(tempValue3))

                              LDI                               3
                              STW                               _winType                        ; winType = THREEOFAKIND

_endif_0x1bc8                 ForNextFarInc                     _i _next_0x1b30 2               ; next i

                              Return                                                            ; return

_straight                     PUSH                              
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              STW                               0xc0
                              LDWI                              _page_0x3fa0
                              CALL                              giga_vAC
_page_0x3fa0                  LDW                               0xc0
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              1
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              1
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              2
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              2
                              STW                               0xc0
                              LDWI                              _page_0x40a0
                              CALL                              giga_vAC
_page_0x40a0                  LDW                               0xc0
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              3
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              3
                              STW                               0xea
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              ADDI                              4
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _elseif_0x1d08 90               ; if (cardValue(hand(4)) = cardValue(hand(3))+1) AND (cardValue(hand(3))+1 = cardValue(hand(2))+2) AND (cardValue(hand(2))+2 = cardValue(hand(1))+3) AND (cardValue(hand(1))+3 = cardValue(hand(0))+4)

                              STW                               0xc0
                              LDWI                              _page_0x41a0
                              CALL                              giga_vAC
_page_0x41a0                  LDW                               0xc0
                              LDI                               1
                              STW                               _straightFlag
                              LDWI                              _endif_0x1dce
                              CALL                              giga_vAC                        ; straightFlag = 1

_elseif_0x1d08                LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              CALL                              convertEqOpAddr
                              STW                               0xea
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              2
                              CALL                              convertEqOpAddr
                              ANDW                              0xea
                              STW                               0xee
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              3
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xea
                              STW                               0xc0
                              LDWI                              _page_0x42a0
                              CALL                              giga_vAC
_page_0x42a0                  LDW                               0xc0
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              4
                              CALL                              convertEqOpAddr
                              ANDW                              0xea
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              5
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _endif_0x1dce 91                ; elseif (cardValue(hand(4)) = ACE) AND (cardValue(hand(0)) = 2) AND (cardValue(hand(1)) = 3) AND (cardValue(hand(2)) = 4) AND (cardValue(hand(3)) = 5)

                              LDI                               1
                              STW                               _straightFlag                   ; straightFlag = 1

_endif_0x1dce                 Return                                                            ; return

_flush                        PUSH                              
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              STW                               0xc0
                              LDWI                              _page_0x43a0
                              CALL                              giga_vAC
_page_0x43a0                  LDW                               0xc0
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x44a0
                              CALL                              giga_vAC
_page_0x44a0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x062c
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _endif_0x1ed1 92                ; if (cardSuit(hand(0)) = cardSuit(hand(1))) AND (cardSuit(hand(1)) = cardSuit(hand(2))) AND (cardSuit(hand(2)) = cardSuit(hand(3))) AND (cardSuit(hand(3)) = cardSuit(hand(4)))

                              LDI                               1
                              STW                               0xc0
                              LDWI                              _page_0x45a0
                              CALL                              giga_vAC
_page_0x45a0                  LDW                               0xc0
                              STW                               _flushFlag                      ; flushFlag = 1

_endif_0x1ed1                 Return                                                            ; return

_fullHouse                    PUSH                              
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x46a0
                              CALL                              giga_vAC
_page_0x46a0                  LDW                               0xc0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _elseif_0x1f9b 93               ; if (cardValue(hand(0)) = cardValue(hand(1))) AND (cardValue(hand(1)) = cardValue(hand(2))) AND (cardValue(hand(3)) = cardValue(hand(4)))

                              LDI                               6
                              STW                               _winType
                              LDWI                              _endif_0x205d
                              CALL                              giga_vAC                        ; winType = FULLHOUSE

_elseif_0x1f9b                LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x47a0
                              CALL                              giga_vAC
_page_0x47a0                  LDW                               0xc0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              STW                               0xc0
                              LDWI                              _page_0x48a0
                              CALL                              giga_vAC
_page_0x48a0                  LDW                               0xc0
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _endif_0x205d 94                ; elseif (cardValue(hand(0)) = cardValue(hand(1))) AND (cardValue(hand(2)) = cardValue(hand(3))) AND (cardValue(hand(3)) = cardValue(hand(4)))

                              LDI                               6
                              STW                               _winType                        ; winType = FULLHOUSE

_endif_0x205d                 Return                                                            ; return

_fourOfAKind                  PUSH                              
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              STW                               0xc0
                              LDWI                              _page_0x49a0
                              CALL                              giga_vAC
_page_0x49a0                  LDW                               0xc0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              STW                               0xc0
                              LDWI                              _page_0x4aa0
                              CALL                              giga_vAC
_page_0x4aa0                  LDW                               0xc0
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _elseif_0x2127 95               ; if (cardValue(hand(0)) = cardValue(hand(1))) AND (cardValue(hand(1)) = cardValue(hand(2))) AND (cardValue(hand(2)) = cardValue(hand(3)))

                              LDI                               7
                              STW                               _winType
                              LDWI                              _endif_0x21e9
                              CALL                              giga_vAC                        ; winType = FOUROFAKIND

_elseif_0x2127                LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              STW                               0xee
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              STW                               0xc0
                              LDWI                              _page_0x4ba0
                              CALL                              giga_vAC
_page_0x4ba0                  LDW                               0xc0
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              STW                               0xee
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              STW                               0xea
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORW                              0xea
                              CALL                              convertEqOpAddr
                              ANDW                              0xee
                              JumpFalse                         _endif_0x21e9 96                ; elseif (cardValue(hand(1)) = cardValue(hand(2))) AND (cardValue(hand(2)) = cardValue(hand(3))) AND (cardValue(hand(3)) = cardValue(hand(4)))

                              STW                               0xc0
                              LDWI                              _page_0x4ca0
                              CALL                              giga_vAC
_page_0x4ca0                  LDW                               0xc0
                              LDI                               7
                              STW                               _winType                        ; winType = FOUROFAKIND

_endif_0x21e9                 Return                                                            ; return

_straightFlush                PUSH                              
                              LDW                               _straightFlag
                              XORI                              1
                              CALL                              convertEqOpAddr
                              STW                               0xe8
                              LDW                               _flushFlag
                              XORI                              1
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              JumpFalse                         _endif_0x2210 97                ; if (straightFlag = 1) AND (flushFlag = 1)

                              LDI                               9
                              STW                               _winType                        ; winType = STRAIGHTFLUSH

_endif_0x2210                 Return                                                            ; return

_royalFlush                   PUSH                              
                              LDW                               _flushFlag
                              XORI                              1
                              CALL                              convertEqOpAddr
                              STW                               0xe8
                              LDWI                              0x72f4
                              DEEK                              
                              STW                               memIndex0
                              LDI                               0
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              10
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              STW                               0xec
                              LDWI                              0x72f6
                              DEEK                              
                              STW                               memIndex0
                              LDI                               1
                              STW                               memIndex1
                              LDWI                              0x0696
                              STW                               0xc0
                              LDWI                              _page_0x4da0
                              CALL                              giga_vAC
_page_0x4da0                  LDW                               0xc0
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              11
                              CALL                              convertEqOpAddr
                              ANDW                              0xec
                              STW                               0xe8
                              LDWI                              0x72f8
                              DEEK                              
                              STW                               memIndex0
                              LDI                               2
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              12
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              STW                               0xec
                              LDWI                              0x72fa
                              DEEK                              
                              STW                               memIndex0
                              LDI                               3
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              13
                              CALL                              convertEqOpAddr
                              ANDW                              0xec
                              STW                               0xe8
                              LDWI                              0x72fc
                              DEEK                              
                              STW                               memIndex0
                              LDI                               4
                              STW                               memIndex1
                              LDWI                              0x0696
                              ADDW                              memIndex0
                              ADDW                              memIndex0
                              DEEK                              
                              XORI                              14
                              STW                               0xc0
                              LDWI                              _page_0x4ea0
                              CALL                              giga_vAC
_page_0x4ea0                  LDW                               0xc0
                              CALL                              convertEqOpAddr
                              ANDW                              0xe8
                              JumpFalse                         _endif_0x22e7 98                ; if (flushFlag = 1) AND (cardValue(hand(0)) = 10) AND (cardValue(hand(1)) = JACK) AND (cardValue(hand(2)) = QUEEN) AND (cardValue(hand(3)) = KING) AND (cardValue(hand(4)) = ACE)

                              LDI                               10
                              STW                               _winType                        ; winType = ROYALFLUSH

_endif_0x22e7                 Return                                                            ; return

_end_0x22e9                   BRA                               _end_0x22e9                     ; END



;****************************************************************************************************************************************
;****************************************************************************************************************************************
;* Internal runtime, DO NOT MODIFY PAST THIS POINT, modifications must be made in the original include files                            *
;****************************************************************************************************************************************
;****************************************************************************************************************************************

romCheck                      EQU     0x65c6
realTimeStub                  EQU     0x66a0
convertEqOp                   EQU     0x64b5
convertGtOp                   EQU     0x64ac
divide16bit                   EQU     0x6ba8
randMod16bit                  EQU     0x64ec
scanlineMode                  EQU     0x64be
waitVBlank                    EQU     0x6aa2
waitVBlanks                   EQU     0x64d9
resetVideoFlags               EQU     0x65a4
initClearFuncs                EQU     0x64c8
clearVertBlinds               EQU     0x68c9
clearCursorRow                EQU     0x67cf
drawHLine                     EQU     0x67a2
drawVLine                     EQU     0x6ea1
drawRect                      EQU     0x69c0
drawRectF                     EQU     0x68a1
draw_sprite                   EQU     0x66d7
drawSprite                    EQU     0x6fa1
printInit                     EQU     0x65b0
printText                     EQU     0x69a7
printDigit                    EQU     0x65dd
printInt16                    EQU     0x6aae
printChar                     EQU     0x6ca7
atTextCursor                  EQU     0x66b2
newLineScroll                 EQU     0x6da4
convertEqOpAddr               EQU     0x00c2
convertNeOpAddr               EQU     0x00c4
convertLeOpAddr               EQU     0x00c6
convertGeOpAddr               EQU     0x00c8
convertLtOpAddr               EQU     0x00ca
convertGtOpAddr               EQU     0x00cc
convert8Arr2dAddr             EQU     0x00ce
convert8Arr3dAddr             EQU     0x00d0
convert16Arr2dAddr            EQU     0x00d2
convert16Arr3dAddr            EQU     0x00d4
realTimeStubAddr              EQU     0x00d6


; do *NOT* use register4 to register7 during time slicing
realTimeAddr        EQU     register0
realTimeProc0       EQU     register1
realTimeProc1       EQU     register2
realTimeProc2       EQU     register3
numericLabel        EQU     register0
defaultLabel        EQU     register1
lutLabs             EQU     register2
lutAddrs            EQU     register3
lutIndex            EQU     register8
romType             EQU     register0
romErrAddr          EQU     register1
romErrPixel         EQU     register2


romCheck            LD      giga_romType
                    ANDI    0xFC
                    SUBW    romType
                    BGE     romC_return
                    LDWI    giga_vram
                    STW     romErrAddr
                    
romC_loop           LD      romErrPixel
                    POKE    romErrAddr
                    INC     romErrPixel
                    BRA     romC_loop                       ; flash left hand corner pixel indicating rom error
                    
romC_return         RET                    


                    ; runs real time, (time sliced), code at regular intervals
                    ; self modifying code allows for timer, midi and user procs
realTimeStub        RET                                     ; RET gets replaced by PUSH
                    LDWI    0x0000                          ; 0x0000 gets replaced by realTimeProc0 address
                    CALL    giga_vAC
realTimeStub1       POP
                    RET
                    RET                                     ; POP + 2xRET gets replaced by LDWI realTimeProc1 address
                    CALL    giga_vAC
realTimeStub2       POP
                    RET
                    RET                                     ; POP + 2xRET gets replaced by LDWI realTimeProc2 address
                    CALL    giga_vAC
                    POP
                    RET


                    ; convert equal to into a boolean
convertEqOp         BEQ     convertEq_1
                    LDI     0
                    RET
convertEq_1         LDI     1
                    RET


                    ; convert greater than into boolean
convertGtOp         BGT     convertGt_1
                    LDI     0
                    RET
convertGt_1         LDI     1
                    RET


; do *NOT* use register4 to register7 during time slicing
mathX               EQU     register8
mathY               EQU     register9
mathSum             EQU     register12
mathRem             EQU     register12
mathMask            EQU     register13
mathSign            EQU     register14
mathQuot            EQU     register15
mathShift           EQU     register15
mathBase            EQU     register10
mathPow             EQU     register11
mathResult          EQU     register14


                    ; accumulator:mathRem = mathX / mathY, (results 16bit)
divide16bit         LDW     mathX
                    XORW    mathY
                    STW     mathSign
                    LDW     mathX
                    BGE     divide16_pos0
                    LDI     0
                    SUBW    mathX
                    STW     mathX
                    
divide16_pos0       LDW     mathY                     
                    BGE     divide16_pos1
                    LDI     0
                    SUBW    mathY
                    STW     mathY
                    
divide16_pos1       LDI     0
                    STW     mathRem
                    LDI     1
    
divide16_loop       STW     mathMask
                    LDW     mathRem
                    LSLW
                    STW     mathRem
                    LDW     mathX
                    BGE     divide16_incr
                    INC     mathRem
                    
divide16_incr       LDW     mathX
                    LSLW
                    STW     mathX
                    LDW     mathRem
                    SUBW    mathY
                    BLT     divide16_incx
                    STW     mathRem
                    INC     mathX
                    
divide16_incx       LDW     mathMask
                    LSLW
                    BNE     divide16_loop
                    PUSH
                    CALL    realTimeStubAddr
                    POP
                    LDW     mathSign
                    BGE     divide16_exit
                    LDI     0
                    SUBW    mathX
                    RET
                    
divide16_exit       LDW     mathX
                    RET


randMod16bit        PUSH
                    LDWI    SYS_Random_34
                    STW     giga_sysFn
                    SYS     34
                    STW     mathX
                    LDWI    divide16bit
                    CALL    giga_vAC
                    LDW     mathRem
                    POP                    
                    RET


; do *NOT* use register4 to register7 during time slicing
graphicsMode        EQU     register0
waitVBlankNum       EQU     register0

drawHLine_x1        EQU     register0
drawHLine_y1        EQU     register1
drawHLine_x2        EQU     register2
drawHLine_x4        EQU     register3

drawVLine_x1        EQU     register0
drawVLine_y1        EQU     register1
drawVLine_y2        EQU     register2
drawVLine_y8        EQU     register3

drawLine_x1         EQU     register0
drawLine_y1         EQU     register1
drawLine_x2         EQU     register2
drawLine_y2         EQU     register3
drawLine_xy1        EQU     register0
drawLine_xy2        EQU     register1
drawLine_dxy1       EQU     register2
drawLine_dxy2       EQU     register3
drawLine_dx1        EQU     register4                       ; register4 to register7 used for temp values, state will be invalidated during time slicing
drawLine_dy1        EQU     register5
drawLine_dx2        EQU     register6
drawLine_dy2        EQU     register7
drawLine_sx         EQU     register8
drawLine_sy         EQU     register9
drawLine_h          EQU     register10
drawLine_num        EQU     register11
drawLine_count      EQU     register12
drawLine_tmp        EQU     register13
drawLine_dx         EQU     register2
drawLine_dy         EQU     register3
drawLine_u          EQU     register8
drawLine_v          EQU     register9
drawLine_addr       EQU     register10

drawPixel_xy        EQU     register15
readPixel_xy        EQU     register15

drawCircle_cx       EQU     register0
drawCircle_cy       EQU     register1
drawCircle_r        EQU     register2
drawCircle_a        EQU     register3
drawCircle_d        EQU     register8
drawCircle_x        EQU     register9
drawCircle_y        EQU     register10
drawCircle_ch0      EQU     register11
drawCircle_ch1      EQU     register12
drawCircle_ch2      EQU     register13
drawCircle_ch3      EQU     register14

drawCircleF_x1      EQU     register0
drawCircleF_y1      EQU     register1
drawCircleF_x2      EQU     register2
drawCircleF_cx      EQU     register15
drawCircleF_cy      EQU     register10
drawCircleF_r       EQU     register11
drawCircleF_v       EQU     register8
drawCircleF_w       EQU     register9

drawRect_x1         EQU     register7
drawRect_y1         EQU     register10
drawRect_x2         EQU     register11
drawRect_y2         EQU     register15

drawRectF_x1        EQU     register0
drawRectF_y1        EQU     register1
drawRectF_x2        EQU     register2
drawRectF_y2        EQU     register7

drawPoly_mode       EQU     register14
drawPoly_addr       EQU     register15

    
scanlineMode        LDWI    SYS_SetMode_v2_80
                    STW     giga_sysFn
                    LDW     graphicsMode
                    SYS     80
                    RET



waitVBlank          LD      giga_videoY
                    XORI    179
                    BNE     waitVBlank
                    PUSH
                    CALL    realTimeStubAddr
                    POP
                    RET


waitVBlanks         PUSH

waitVB_loop         LDW     waitVBlankNum
                    SUBI    0x01
                    STW     waitVBlankNum
                    BGE     waitVB_vblank
                    POP
                    RET
    
waitVB_vblank       LDWI    waitVBlank
                    CALL    giga_vAC
                    BRA     waitVB_loop


; do *NOT* use register4 to register7 during time slicing
xreset              EQU     register0
xcount              EQU     register1
ycount              EQU     register2
treset              EQU     register3
breset              EQU     register8
top                 EQU     register9
bot                 EQU     register10
vramAddr            EQU     register11
evenAddr            EQU     register12
clsAddress          EQU     register13
clsLines            EQU     register14
varAddress          EQU     register13
clrAddress          EQU     register13
clrLines            EQU     register14
clrWidth            EQU     register15
    

resetVideoFlags     LDI     giga_CursorX                    ; cursor x start
                    STW     cursorXY
                    LDWI    ON_BOTTOM_ROW_MSK
                    ANDW    miscFlags
                    STW     miscFlags                       ; reset on bottom row flag
                    RET



initClearFuncs      PUSH
                    LDWI    resetVideoFlags
                    CALL    giga_vAC
                    LDWI    SYS_SetMemory_v2_54             ; setup fill memory SYS routine
                    STW     giga_sysFn
                    LD      fgbgColour
                    ST      giga_sysArg1                    ; fill value
                    POP
                    RET


                    ; clears the viewable screen using a vertical blinds effect
clearVertBlinds     PUSH
                    LDWI    initClearFuncs
                    CALL    giga_vAC
                    LDI     giga_vram >> 8
                    STW     top  
                    
clearVB_loopy       LDI     giga_xres
                    ST      giga_sysArg0
                    LDI     0
                    ST      giga_sysArg2                    ; low start address
                    LD      top
                    ST      giga_sysArg3                    ; top line
                    SYS     54                              ; fill memory
    
                    LDI     giga_xres
                    ST      giga_sysArg0
                    LDI     0
                    ST      giga_sysArg2                    ; low start address
                    LDWI    giga_yres - 1 + 16
                    SUBW    top
                    ST      giga_sysArg3                    ; bottom line
                    SYS     54                              ; fill memory
                    INC     top                             ; next top line
                    CALL    realTimeStubAddr
                    LD      top
                    SUBI    giga_yres / 2 + 8
                    BLT     clearVB_loopy
                    POP
                    RET



drawHLine           PUSH
                    LD      drawHLine_x1
                    ST      giga_sysArg2                    ; low start address
                    LD      drawHLine_x2
                    SUBW    drawHLine_x1
                    BGE     drawHL_cont
                    LD      drawHLine_x2
                    ST      giga_sysArg2                    ; low start address
                    LD      drawHLine_x1
                    SUBW    drawHLine_x2
                    
drawHL_cont         ADDI    1
                    ST      giga_sysArg0                    ; count
                    LD      fgbgColour + 1
                    ST      giga_sysArg1                    ; fill value
                    LD      drawHLine_y1
                    ADDI    8
                    ST      giga_sysArg3                    ; high start address
                    LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn
                    SYS     54                              ; fill memory
                    CALL    realTimeStubAddr
                    POP
                    RET



drawVLine           PUSH
                    LDW     drawVLine_y2
                    SUBW    drawVLine_y1
                    BGE     drawVL_cont
                    LDW     drawVLine_y2
                    STW     drawLine_tmp
                    LDW     drawVLine_y1
                    STW     drawVLine_y2
                    LDW     drawLine_tmp
                    STW     drawVLine_y1                    ; if y2 < y1 then swap y2 with y1
                    
drawVL_cont         LD      drawVLine_x1
                    ST      giga_sysArg4
                    LD      drawVLine_y1
                    ADDI    8
                    ST      drawVLine_y1
                    ST      giga_sysArg5
                    LDW     drawVLine_y2
                    ADDI    8
                    ST      drawVLine_y2
                    SUBW    drawVLine_y1
                    SUBI    8
                    BLT     drawVL_loop1
                    
                    LDW     fgbgColour
                    STW     giga_sysArg0
                    LDWI    SYS_VDrawBits_134
                    STW     giga_sysFn                      ; setup 8 pixel SYS routine
                    
                    LDW     drawVLine_y2
                    SUBI    7
                    STW     drawVLine_y8                    ; 8 pixel chunks limit

drawVL_loop0        LDI     0xFF
                    ST      giga_sysArg2                    ; 8 pixels of fg and bg colour
                    SYS     134                             ; SYS_VDrawBits_134, 270 - 134/2 = 0xCB
                    CALL    realTimeStubAddr
                    LD      giga_sysArg5
                    ADDI    8
                    ST      giga_sysArg5
                    SUBW    drawVLine_y8
                    BLT     drawVL_loop0                    ; all 8 pixel chunks
                    
drawVL_loop1        LD      fgbgColour + 1
                    POKE    giga_sysArg4
                    INC     giga_sysArg5
                    LD      giga_sysArg5
                    SUBW    drawVLine_y2
                    BLE     drawVL_loop1                    ; remaining pixels
                    POP
                    RET


drawRect            PUSH
                    LDW     drawRect_x1
                    STW     drawHLine_x1
                    LDW     drawRect_y1
                    STW     drawHLine_y1
                    LDW     drawRect_x2
                    STW     drawHLine_x2
                    LDWI    drawHLine
                    CALL    giga_vAC
                    LDW     drawRect_y2
                    STW     drawHLine_y1
                    LDWI    drawHLine
                    CALL    giga_vAC

                    LDW     drawRect_x1
                    STW     drawVLine_x1
                    LDW     drawRect_y1
                    STW     drawVLine_y1
                    LDW     drawRect_y2
                    STW     drawVLine_y2
                    LDWI    drawVLine
                    CALL    giga_vAC
                    LDW     drawRect_x2
                    STW     drawVLine_x1
                    LDW     drawRect_y1
                    STW     drawVLine_y1
                    LDW     drawRect_y2
                    STW     drawVLine_y2
                    LDWI    drawVLine
                    CALL    giga_vAC

                    POP
                    RET


drawRectF           PUSH
                    LDW     drawRectF_y2
                    SUBW    drawRectF_y1
                    BGE     drawRF_loop
                    LDW     drawRectF_y2
                    STW     drawLine_tmp
                    LDW     drawRectF_y1
                    STW     drawRectF_y2
                    LDW     drawLine_tmp
                    STW     drawRectF_y1                    ;if y2 < y1 then swap y2 with y1
                    
drawRF_loop         LDW     drawRectF_y1
                    STW     drawHLine_y1
                    LDWI    drawHLine
                    CALL    giga_vAC
                    INC     drawRectF_y1
                    LDW     drawRectF_y1
                    SUBW    drawRectF_y2
                    BLE     drawRF_loop

                    POP
                    RET



; do *NOT* use register4 to register7 during time slicing
spriteId            EQU     register0
spriteXY            EQU     register1
spriteAddrs         EQU     register2

    
draw_sprite         PUSH
                    LDWI    _spritesLut_
                    ADDW    spriteId
                    ADDW    spriteId
                    DEEK
                    STW     spriteAddrs                     ; get sprite address table
                    
draw_s_loop         LDW     spriteAddrs
                    DEEK                                    ; get source address
                    BEQ     draw_s_exit
                    STW     giga_sysArg0
                    INC     spriteAddrs
                    INC     spriteAddrs
                    LDW     spriteAddrs
                    DEEK                                    ; get stripe destination offset
                    ADDW    spriteXY
                    SYS     64
                    INC     spriteAddrs
                    INC     spriteAddrs
                    CALL    realTimeStubAddr
                    BRA     draw_s_loop
                    
draw_s_exit         POP
                    RET


drawSprite          PUSH
                    LDWI    SYS_Sprite6_v3_64
                    STW     giga_sysFn
                    LDWI    draw_sprite
                    CALL    giga_vAC
                    POP
                    RET



; do *NOT* use register4 to register7 during time slicing
textStr             EQU     register0
textNum             EQU     register0
textBak             EQU     register0
textLen             EQU     register1
textOfs             EQU     register2
textChr             EQU     register3
textHex             EQU     register8
textFont            EQU     register9
textSlice           EQU     register10
scanLine            EQU     register11
digitMult           EQU     register12
digitIndex          EQU     register13
clearLoop           EQU     register14
    
    
printInit           LDWI    SYS_VDrawBits_134
                    STW     giga_sysFn
                    LDW     fgbgColour
                    STW     giga_sysArg0
                    LD      cursorXY + 1                    ; xy = peek(256+2*y)*256 + x
                    LSLW
                    INC     giga_vAC + 1
                    PEEK
                    ST      giga_sysArg4 + 1
                    LD      cursorXY
                    ST      giga_sysArg4                    ; xy position
                    RET



                    ; prints text string pointed to by textStr
printText           PUSH
                    LDWI    printInit
                    CALL    giga_vAC

                    ; first byte is length
printT_char         INC     textStr                         ; next char
                    LDW     textStr             
                    PEEK
                    BEQ     printT_exit                     ; check for delimiting zero
                    ST      textChr
                    LDWI    printChar
                    CALL    giga_vAC
                    BRA     printT_char
                    
printT_exit         POP
                    RET



                    ; prints single digit in textNum
printDigit          PUSH
                    LDW     textNum
printD_index        SUBW    digitMult
                    BLT     printD_cont
                    STW     textNum
                    INC     digitIndex
                    BRA     printD_index
    
printD_cont         LD      digitIndex
                    BEQ     printD_exit
                    ORI     0x30
                    ST      textChr
                    LDWI    printChar
                    CALL    giga_vAC
                    LDI     0x30
                    ST      digitIndex
printD_exit         POP
                    RET


                    ; prints 16bit int in textNum
printInt16          PUSH
                    LDWI    printInit
                    CALL    giga_vAC
                    LDI     0
                    ST      digitIndex
                    LDW     textNum
                    BGE     printI16_pos
                    LDI     0x2D
                    ST      textChr
                    LDWI    printChar
                    CALL    giga_vAC
                    LDI     0
                    SUBW    textNum
                    STW     textNum    
    
printI16_pos        LDWI    10000
                    STW     digitMult
                    LDWI    printDigit
                    CALL    giga_vAC
                    LDWI    1000
                    STW     digitMult
                    LDWI    printDigit
                    CALL    giga_vAC
                    LDI     100
                    STW     digitMult
                    LDWI    printDigit
                    CALL    giga_vAC
                    LDI     10
                    STW     digitMult
                    LDWI    printDigit
                    CALL    giga_vAC
                    LD      textNum
                    ORI     0x30
                    ST      textChr
                    LDWI    printChar
                    CALL    giga_vAC
                    POP
                    RET


                    ; prints char in textChr
printChar           LD      textChr
                    ANDI    0x7F                            ; char can't be bigger than 127
                    SUBI    82
                    BGE     printC_text82
                    ADDI    50
                    BLT     printC_exit                     ; char<32 exit
                    STW     textChr                         ; char-32
                    LDWI    giga_text32                     ; text font slice base address for chars 32-81
                    BRA     printC_font
                    
printC_text82       STW     textChr                         ; char-82
                    LDWI    giga_text82                     ; text font slice base address for chars 82+
                    
printC_font         STW     textFont
                    LD      textChr
                    LSLW    
                    LSLW    
                    ADDW    textChr
                    ADDW    textFont
                    STW     textFont                        ; char*5 + textFont
                    LDI     0x05

printC_slice        ST      textSlice
                    LDW     textFont                        ; text font slice base address
                    LUP     0x00                            ; get ROM slice
                    ST      giga_sysArg2
                    SYS     134                             ; draw vertical slice, SYS_VDrawBits_134, 270 - 134/2 = 0xCB
                    INC     textFont                        ; next vertical slice
                    INC     giga_sysArg4                    ; next x
                    LD      textSlice
                    SUBI    1
                    BNE     printC_slice
                    
                    ST      giga_sysArg2                    ; result of printC_slice is 0
                    SYS     134                             ; draw last blank slice
                    INC     giga_sysArg4                    ; using sysArg4 as a temporary cursor address for multiple char prints
                    
                    PUSH
                    CALL    realTimeStubAddr
                    LD      cursorXY
                    ADDI    giga_xfont
                    ST      cursorXY
                    SUBI    giga_xres - giga_xfont          ; last possible char on line
                    BLE     printC_pop
                    LDWI    newLineScroll                   ; next row, scroll at bottom
                    CALL    giga_vAC
                    
printC_pop          POP

printC_exit         RET


atTextCursor        LD      cursorXY
                    SUBI    giga_xres - giga_xfont
                    BLE     atTC_checkY
                    LDI     0
                    ST      cursorXY
                    
atTC_checkY         LD      cursorXY + 1
                    SUBI    giga_yres - giga_yfont
                    BLT     atTC_resbot
                    LDI     giga_yres - giga_yfont
                    ST      cursorXY + 1
                    LDI     ON_BOTTOM_ROW_BIT
                    ORW     miscFlags
                    STW     miscFlags                       ; set on bottom row flag
                    RET
                    
atTC_resbot         LDWI    ON_BOTTOM_ROW_MSK
                    ANDW    miscFlags
                    STW     miscFlags                       ; reset on bottom row flag
                    RET



                    ; clears the top giga_yfont lines of pixels in preparation of text scrolling
clearCursorRow      PUSH
                    LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn                      ; setup fill memory SYS routine
                    LD      fgbgColour
                    ST      giga_sysArg1                    ; fill value
                    LDWI    giga_videoTable
                    PEEK
                    ST      giga_sysArg3                    ; row0 high byte address
                    LDI     giga_yfont

clearCR_loopy       ST      clearLoop                    
                    LDI     giga_xres
                    ST      giga_sysArg0
                    LDI     0
                    ST      giga_sysArg2                    ; low start address
                    SYS     54                              ; fill memory
                    INC     giga_sysArg3                    ; next line
                    LD      clearLoop
                    SUBI    1
                    BNE     clearCR_loopy
                    CALL    realTimeStubAddr
                    LDWI    printInit
                    CALL    giga_vAC                        ; re-initialise the SYS registers
                    POP
                    RET


                    ; print from top row to bottom row, then start scrolling 
newLineScroll       LDI     giga_CursorX                    ; cursor x start
                    ST      cursorXY
                    ST      giga_sysArg4
                    LDI     ENABLE_SCROLL_BIT
                    ANDW    miscFlags
                    BNE     newLS_cont0                     ; is scroll on or off?
                    RET
                    
newLS_cont0         PUSH
                    LDI     ON_BOTTOM_ROW_BIT
                    ANDW    miscFlags                       ; is on bottom row flag?
                    BNE     newLS_cont1
                    LD      cursorXY + 1
                    ADDI    giga_yfont
                    ST      cursorXY + 1
                    SUBI    giga_yres
                    BLT     newLS_exit
                    LDI     giga_yres - giga_yfont
                    ST      cursorXY + 1
                    
newLS_cont1         LDWI    clearCursorRow
                    CALL    giga_vAC
                    LDWI    giga_videoTable
                    STW     scanLine
    
newLS_scroll        CALL    realTimeStubAddr
                    LDW     scanLine
                    PEEK
                    ADDI    giga_yfont
                    ANDI    0x7F
                    SUBI    giga_yfont
                    BGE     newLS_adjust
                    ADDI    giga_yfont
                    
newLS_adjust        ADDI    giga_yfont
                    POKE    scanLine
                    INC     scanLine                        ; scanline pointers are 16bits
                    INC     scanLine
                    LD      scanLine
                    SUBI    0xF0                            ; scanline pointers end at 0x01EE
                    BLT     newLS_scroll
                    
                    LDI     ON_BOTTOM_ROW_BIT
                    ORW     miscFlags
                    STW     miscFlags                       ; set on bottom row flag
                    
newLS_exit          LDWI    printInit
                    CALL    giga_vAC                        ; re-initialise the SYS registers
                    POP
                    RET

